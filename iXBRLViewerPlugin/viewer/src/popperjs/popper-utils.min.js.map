{"version":3,"file":"popper-utils.min.js","sources":["../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/getReferenceNode.js","../../src/utils/isBrowser.js","../../src/utils/isIE.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getFixedPositionOffsetParent.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/debounce.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/getOffsetRect.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getSupportedPropertyName.js","../../src/utils/isFunction.js","../../src/utils/isModifierEnabled.js","../../src/utils/isModifierRequired.js","../../src/utils/isNumeric.js","../../src/utils/getWindow.js","../../src/utils/removeEventListeners.js","../../src/utils/runModifiers.js","../../src/utils/setAttributes.js","../../src/utils/setStyles.js","../../src/utils/setupEventListeners.js","../../src/utils/index.js"],"sourcesContent":["/**\r\n * Get CSS computed property of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Eement} element\r\n * @argument {String} property\r\n */\r\nexport default function getStyleComputedProperty(element, property) {\r\n  if (element.nodeType !== 1) {\r\n    return [];\r\n  }\r\n  // NOTE: 1 DOM access here\r\n  const window = element.ownerDocument.defaultView;\r\n  const css = window.getComputedStyle(element, null);\r\n  return property ? css[property] : css;\r\n}\r\n","/**\r\n * Returns the parentNode or the host of the element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} parent\r\n */\r\nexport default function getParentNode(element) {\r\n  if (element.nodeName === 'HTML' || element.nodeName === 'html') {\r\n    return element;\r\n  }\r\n  return element.parentNode || element.host;\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport getParentNode from './getParentNode';\r\n\r\n/**\r\n * Returns the scrolling parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} scroll parent\r\n */\r\nexport default function getScrollParent(element) {\r\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\r\n  if (!element) {\r\n    return document.body\r\n  }\r\n\r\n  switch (element.nodeName) {\r\n    case 'HTML':\r\n    case 'html':\r\n    case 'BODY':\r\n    case 'body':\r\n      return element.ownerDocument.body\r\n    case '#document':\r\n      return element.body\r\n  }\r\n\r\n  // Firefox want us to check `-x` and `-y` variations as well\r\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\r\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\r\n    return element;\r\n  }\r\n\r\n  return getScrollParent(getParentNode(element));\r\n}\r\n","/**\r\n * Returns the reference node of the reference object, or the reference object itself.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\r\n * @returns {Element} parent\r\n */\r\nexport default function getReferenceNode(reference) {\r\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\r\n}\r\n","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\r\n","import isBrowser from './isBrowser';\r\n\r\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\r\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\r\n\r\n/**\r\n * Determines if the browser is Internet Explorer\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Number} version to check\r\n * @returns {Boolean} isIE\r\n */\r\nexport default function isIE(version) {\r\n  if (version === 11) {\r\n    return isIE11;\r\n  }\r\n  if (version === 10) {\r\n    return isIE10;\r\n  }\r\n  return isIE11 || isIE10;\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport isIE from './isIE';\r\n/**\r\n * Returns the offset parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} offset parent\r\n */\r\nexport default function getOffsetParent(element) {\r\n  if (!element) {\r\n    return document.documentElement; // semyonc: review later\r\n  }\r\n\r\n  const noOffsetParent = isIE(10) ? element.ownerDocument.body : null;\r\n\r\n  // NOTE: 1 DOM access here\r\n  let offsetParent = element.offsetParent || null;\r\n  // Skip hidden elements which don't have an offsetParent\r\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\r\n    offsetParent = (element = element.nextElementSibling).offsetParent;\r\n  }\r\n\r\n  const nodeName = offsetParent && offsetParent.nodeName.toUpperCase();\r\n\r\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\r\n    return element ? element.ownerDocument.documentElement : document.documentElement;\r\n  }\r\n\r\n  // .offsetParent will return the closest TH, TD or TABLE in case\r\n  // no offsetParent is present, I hate this job...\r\n  if (\r\n    ['TH', 'TD', 'TABLE'].indexOf(nodeName) !== -1 &&\r\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\r\n  ) {\r\n    return getOffsetParent(offsetParent);\r\n  }\r\n\r\n  return offsetParent;\r\n}\r\n","import getOffsetParent from './getOffsetParent';\r\n\r\nexport default function isOffsetContainer(element) {\r\n  const { nodeName } = element;\r\n  if (nodeName === 'BODY' || nodeName === 'body') {\r\n    return true; // Bug!\r\n  }\r\n  return (\r\n    nodeName === 'HTML' || nodeName === 'html' || getOffsetParent(element.firstElementChild) === element\r\n  );\r\n}\r\n","/**\r\n * Finds the root node (document, shadowDOM root) of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} node\r\n * @returns {Element} root node\r\n */\r\nexport default function getRoot(node) {\r\n  if (node.parentNode !== null) {\r\n    return getRoot(node.parentNode);\r\n  }\r\n\r\n  return node;\r\n}\r\n","import isOffsetContainer from './isOffsetContainer';\r\nimport getRoot from './getRoot';\r\nimport getOffsetParent from './getOffsetParent';\r\n\r\n/**\r\n * Finds the offset parent common to the two provided nodes\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element1\r\n * @argument {Element} element2\r\n * @returns {Element} common offset parent\r\n */\r\nexport default function findCommonOffsetParent(element1, element2) {\r\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\r\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\r\n    return document.documentElement;\r\n  }\r\n\r\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\r\n  const order =\r\n    element1.compareDocumentPosition(element2) &\r\n    Node.DOCUMENT_POSITION_FOLLOWING;\r\n  const start = order ? element1 : element2;\r\n  const end = order ? element2 : element1;\r\n\r\n  // Get common ancestor container\r\n  const range = element1.ownerDocument.createRange();\r\n  range.setStart(start, 0);\r\n  range.setEnd(end, 0);\r\n  const { commonAncestorContainer } = range;\r\n\r\n  // Both nodes are inside #document\r\n  if (\r\n    (element1 !== commonAncestorContainer &&\r\n      element2 !== commonAncestorContainer) ||\r\n    start.contains(end)\r\n  ) {\r\n    if (isOffsetContainer(commonAncestorContainer)) {\r\n      return commonAncestorContainer;\r\n    }\r\n\r\n    return getOffsetParent(commonAncestorContainer);\r\n  }\r\n\r\n  // one of the nodes is inside shadowDOM, find which one\r\n  const element1root = getRoot(element1);\r\n  if (element1root.host) {\r\n    return findCommonOffsetParent(element1root.host, element2);\r\n  } else {\r\n    return findCommonOffsetParent(element1, getRoot(element2).host);\r\n  }\r\n}\r\n","/**\r\n * Gets the scroll value of the given element in the given side (top and left)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {String} side `top` or `left`\r\n * @returns {number} amount of scrolled pixels\r\n */\r\nexport default function getScroll(element, side = 'top') {\r\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\r\n  const nodeName = element.nodeName;\r\n\r\n  if (nodeName === 'BODY' || nodeName === 'body' || nodeName === 'HTML' || nodeName === 'html') {\r\n    const html = element.ownerDocument.documentElement;\r\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\r\n    return scrollingElement[upperSide];\r\n  }\r\n\r\n  return element[upperSide];\r\n}\r\n","import getScroll from './getScroll';\r\n\r\n/*\r\n * Sum or subtract the element scroll values (left and top) from a given rect object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} rect - Rect object you want to change\r\n * @param {HTMLElement} element - The element from the function reads the scroll values\r\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\r\n * @return {Object} rect - The modifier rect object\r\n */\r\nexport default function includeScroll(rect, element, subtract = false) {\r\n  const scrollTop = getScroll(element, 'top');\r\n  const scrollLeft = getScroll(element, 'left');\r\n  const modifier = subtract ? -1 : 1;\r\n  rect.top += scrollTop * modifier;\r\n  rect.bottom += scrollTop * modifier;\r\n  rect.left += scrollLeft * modifier;\r\n  rect.right += scrollLeft * modifier;\r\n  return rect;\r\n}\r\n","/*\r\n * Helper to detect borders of a given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {CSSStyleDeclaration} styles\r\n * Result of `getStyleComputedProperty` on the given element\r\n * @param {String} axis - `x` or `y`\r\n * @return {number} borders - The borders size of the given axis\r\n */\r\n\r\nexport default function getBordersSize(styles, axis) {\r\n  const sideA = axis === 'x' ? 'Left' : 'Top';\r\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\r\n\r\n  return (\r\n    parseFloat(styles[`border${sideA}Width`], 10) +\r\n    parseFloat(styles[`border${sideB}Width`], 10)\r\n  );\r\n}\r\n","import isIE from './isIE';\r\n\r\nfunction getSize(axis, body, html, computedStyle) {\r\n  return Math.max(\r\n    body[`offset${axis}`],\r\n    body[`scroll${axis}`],\r\n    html[`client${axis}`],\r\n    html[`offset${axis}`],\r\n    html[`scroll${axis}`],\r\n    isIE(10)\r\n      ? (parseInt(html[`offset${axis}`]) + \r\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \r\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\r\n    : 0 \r\n  );\r\n}\r\n\r\nexport default function getWindowSizes(document) {\r\n  const body = document.body;\r\n  const html = document.documentElement;\r\n  const computedStyle = isIE(10) && getComputedStyle(html);\r\n\r\n  return {\r\n    height: getSize('Height', body, html, computedStyle),\r\n    width: getSize('Width', body, html, computedStyle),\r\n  };\r\n}\r\n","/**\r\n * Given element offsets, generate an output similar to getBoundingClientRect\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} offsets\r\n * @returns {Object} ClientRect like output\r\n */\r\nexport default function getClientRect(offsets) {\r\n  return {\r\n    ...offsets,\r\n    right: offsets.left + offsets.width,\r\n    bottom: offsets.top + offsets.height,\r\n  };\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport getBordersSize from './getBordersSize';\r\nimport getWindowSizes from './getWindowSizes';\r\nimport getScroll from './getScroll';\r\nimport getClientRect from './getClientRect';\r\nimport isIE from './isIE';\r\n\r\n/**\r\n * Get bounding client rect of given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} element\r\n * @return {Object} client rect\r\n */\r\nexport default function getBoundingClientRect(element) {\r\n  let rect = {};\r\n\r\n  // IE10 10 FIX: Please, don't ask, the element isn't\r\n  // considered in DOM in some circumstances...\r\n  // This isn't reproducible in IE10 compatibility mode of IE11\r\n  try {\r\n    if (isIE(10)) {\r\n      rect = element.getBoundingClientRect();\r\n      const scrollTop = getScroll(element, 'top');\r\n      const scrollLeft = getScroll(element, 'left');\r\n      rect.top += scrollTop;\r\n      rect.left += scrollLeft;\r\n      rect.bottom += scrollTop;\r\n      rect.right += scrollLeft;\r\n    }\r\n    else {\r\n      rect = element.getBoundingClientRect();\r\n    }\r\n  }\r\n  catch(e){}\r\n\r\n  const result = {\r\n    left: rect.left,\r\n    top: rect.top,\r\n    width: rect.right - rect.left,\r\n    height: rect.bottom - rect.top,\r\n  };\r\n\r\n  // subtract scrollbar size from sizes\r\n  const sizes = (element.nodeName === 'HTML' || element.nodeName === 'html') ? getWindowSizes(element.ownerDocument) : {};\r\n  const width =\r\n    sizes.width || element.clientWidth || result.width;\r\n  const height =\r\n    sizes.height || element.clientHeight || result.height;\r\n\r\n  let horizScrollbar = element.offsetWidth - width;\r\n  let vertScrollbar = element.offsetHeight - height;\r\n\r\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\r\n  // we make this check conditional for performance reasons\r\n  if (horizScrollbar || vertScrollbar) { \r\n    const styles = getStyleComputedProperty(element);\r\n\r\n    if (styles.display !== 'inline') { \r\n      // semyonc: http://www.w3.org/TR/cssom-view/#dom-element-clientwidth \r\n      //    If the element has no associated CSS layout box or if the CSS layout box is inline the clientWidth and clientHeight return 0\r\n      horizScrollbar -= getBordersSize(styles, 'x');\r\n      vertScrollbar -= getBordersSize(styles, 'y');\r\n\r\n      result.width -= horizScrollbar;\r\n      result.height -= vertScrollbar;\r\n    }\r\n  }\r\n\r\n  return getClientRect(result);\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport includeScroll from './includeScroll';\r\nimport getScrollParent from './getScrollParent';\r\nimport getBoundingClientRect from './getBoundingClientRect';\r\nimport runIsIE from './isIE';\r\nimport getClientRect from './getClientRect';\r\n\r\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\r\n  const isIE10 = runIsIE(10);\r\n  const isHTML = (parent.nodeName === 'HTML' || parent.nodeName === 'html');\r\n  const childrenRect = getBoundingClientRect(children);\r\n  const parentRect = getBoundingClientRect(parent);\r\n  const scrollParent = getScrollParent(children);\r\n\r\n  const styles = getStyleComputedProperty(parent);\r\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\r\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\r\n\r\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\r\n  if(fixedPosition && isHTML) {\r\n    parentRect.top = Math.max(parentRect.top, 0);\r\n    parentRect.left = Math.max(parentRect.left, 0);\r\n  }\r\n  let offsets = getClientRect({\r\n    top: childrenRect.top - parentRect.top - borderTopWidth,\r\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\r\n    width: childrenRect.width,\r\n    height: childrenRect.height,\r\n  });\r\n  offsets.marginTop = 0;\r\n  offsets.marginLeft = 0;\r\n\r\n  // Subtract margins of documentElement in case it's being used as parent\r\n  // we do this only on HTML because it's the only element that behaves\r\n  // differently when margins are applied to it. The margins are included in\r\n  // the box of the documentElement, in the other cases not.\r\n  if (!isIE10 && isHTML) {\r\n    const marginTop = parseFloat(styles.marginTop, 10);\r\n    const marginLeft = parseFloat(styles.marginLeft, 10);\r\n\r\n    offsets.top -= borderTopWidth - marginTop;\r\n    offsets.bottom -= borderTopWidth - marginTop;\r\n    offsets.left -= borderLeftWidth - marginLeft;\r\n    offsets.right -= borderLeftWidth - marginLeft;\r\n\r\n    // Attach marginTop and marginLeft because in some circumstances we may need them\r\n    offsets.marginTop = marginTop;\r\n    offsets.marginLeft = marginLeft;\r\n  }\r\n\r\n  if (\r\n    isIE10 && !fixedPosition\r\n      ? parent.contains(scrollParent)\r\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY' && scrollParent.nodeName !== 'body'\r\n  ) {\r\n    offsets = includeScroll(offsets, parent);\r\n  }\r\n\r\n  return offsets;\r\n}\r\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\r\nimport getScroll from './getScroll';\r\nimport getClientRect from './getClientRect';\r\n\r\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\r\n  const html = element.ownerDocument.documentElement;\r\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\r\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\r\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\r\n\r\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\r\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\r\n\r\n  const offset = {\r\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\r\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\r\n    width,\r\n    height,\r\n  };\r\n\r\n  return getClientRect(offset);\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport getParentNode from './getParentNode';\r\n\r\n/**\r\n * Check if the given element is fixed or is inside a fixed parent\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {Element} customContainer\r\n * @returns {Boolean} answer to \"isFixed?\"\r\n */\r\nexport default function isFixed(element) {\r\n  const nodeName = element.nodeName;\r\n  if (nodeName === 'BODY' ||nodeName === 'body' || nodeName === 'HTML' || nodeName === 'html') {\r\n    return false;\r\n  }\r\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\r\n    return true;\r\n  }\r\n  const parentNode = getParentNode(element);\r\n  if (!parentNode) {\r\n    return false;\r\n  }\r\n  return isFixed(parentNode);\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport isIE from './isIE';\r\n/**\r\n * Finds the first parent of an element that has a transformed property defined\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} first transformed parent or documentElement\r\n */\r\n\r\nexport default function getFixedPositionOffsetParent(element) {\r\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\r\n   if (!element || !element.parentElement || isIE()) {\r\n    return document.documentElement; // semyonc: review later\r\n  }\r\n  let el = element.parentElement;\r\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\r\n    el = el.parentElement;\r\n  }\r\n  return el || element.ownerDocument.documentElement;\r\n\r\n}\r\n","import getScrollParent from './getScrollParent';\r\nimport getParentNode from './getParentNode';\r\nimport getReferenceNode from './getReferenceNode';\r\nimport findCommonOffsetParent from './findCommonOffsetParent';\r\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\r\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\r\nimport getWindowSizes from './getWindowSizes';\r\nimport isFixed from './isFixed';\r\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\r\n\r\n/**\r\n * Computed the boundaries limits and return them\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} popper\r\n * @param {HTMLElement} reference\r\n * @param {number} padding\r\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\r\n * @param {Boolean} fixedPosition - Is in fixed position mode\r\n * @returns {Object} Coordinates of the boundaries\r\n */\r\nexport default function getBoundaries(\r\n  popper,\r\n  reference,\r\n  padding,\r\n  boundariesElement,\r\n  fixedPosition = false\r\n) {\r\n  // NOTE: 1 DOM access here\r\n\r\n  let boundaries = { top: 0, left: 0 };\r\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\r\n\r\n  // Handle viewport case\r\n  if (boundariesElement === 'viewport' ) {\r\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\r\n  }\r\n\r\n  else {\r\n    // Handle other cases based on DOM element used as boundaries\r\n    let boundariesNode;\r\n    if (boundariesElement === 'scrollParent') {\r\n      boundariesNode = getScrollParent(getParentNode(reference));\r\n      if (boundariesNode.nodeName === 'BODY' || boundariesNode.nodeName === 'body') {\r\n        boundariesNode = popper.ownerDocument.documentElement;\r\n      }\r\n    } else if (boundariesElement === 'window') {\r\n      boundariesNode = popper.ownerDocument.documentElement;\r\n    } else {\r\n      boundariesNode = boundariesElement;\r\n    }\r\n\r\n    const offsets = getOffsetRectRelativeToArbitraryNode(\r\n      boundariesNode,\r\n      offsetParent,\r\n      fixedPosition\r\n    );\r\n\r\n    // In case of HTML, we need a different computation\r\n    if ((boundariesNode.nodeName === 'HTML' || boundariesNode.nodeName === 'html') && !isFixed(offsetParent)) {\r\n      const { height, width } = getWindowSizes(popper.ownerDocument);\r\n      boundaries.top += offsets.top - offsets.marginTop;\r\n      boundaries.bottom = height + offsets.top;\r\n      boundaries.left += offsets.left - offsets.marginLeft;\r\n      boundaries.right = width + offsets.left;\r\n    } else {\r\n      // for all the other DOM elements, this one is good\r\n      boundaries = offsets;\r\n    }\r\n  }\r\n\r\n  // Add paddings\r\n  padding = padding || 0;\r\n  const isPaddingNumber = typeof padding === 'number';\r\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \r\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \r\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \r\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \r\n\r\n  return boundaries;\r\n}\r\n","import getBoundaries from '../utils/getBoundaries';\r\n\r\nfunction getArea({ width, height }) {\r\n  return width * height;\r\n}\r\n\r\n/**\r\n * Utility used to transform the `auto` placement to the placement with more\r\n * available space.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function computeAutoPlacement(\r\n  placement,\r\n  refRect,\r\n  popper,\r\n  reference,\r\n  boundariesElement,\r\n  padding = 0\r\n) {\r\n  if (placement.indexOf('auto') === -1) {\r\n    return placement;\r\n  }\r\n\r\n  const boundaries = getBoundaries(\r\n    popper,\r\n    reference,\r\n    padding,\r\n    boundariesElement\r\n  );\r\n\r\n  const rects = {\r\n    top: {\r\n      width: boundaries.width,\r\n      height: refRect.top - boundaries.top,\r\n    },\r\n    right: {\r\n      width: boundaries.right - refRect.right,\r\n      height: boundaries.height,\r\n    },\r\n    bottom: {\r\n      width: boundaries.width,\r\n      height: boundaries.bottom - refRect.bottom,\r\n    },\r\n    left: {\r\n      width: refRect.left - boundaries.left,\r\n      height: boundaries.height,\r\n    },\r\n  };\r\n\r\n  const sortedAreas = Object.keys(rects)\r\n    .map(key => ({\r\n      key,\r\n      ...rects[key],\r\n      area: getArea(rects[key]),\r\n    }))\r\n    .sort((a, b) => b.area - a.area);\r\n\r\n  const filteredAreas = sortedAreas.filter(\r\n    ({ width, height }) =>\r\n      width >= popper.clientWidth && height >= popper.clientHeight\r\n  );\r\n\r\n  const computedPlacement = filteredAreas.length > 0\r\n    ? filteredAreas[0].key\r\n    : sortedAreas[0].key;\r\n\r\n  const variation = placement.split('-')[1];\r\n\r\n  return computedPlacement + (variation ? `-${variation}` : '');\r\n}\r\n","import isBrowser from './isBrowser';\r\n\r\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\r\nlet timeoutDuration = 0;\r\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\r\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\r\n    timeoutDuration = 1;\r\n    break;\r\n  }\r\n}\r\n\r\nexport function microtaskDebounce(fn) {\r\n  let called = false\r\n  return () => {\r\n    if (called) {\r\n      return\r\n    }\r\n    called = true\r\n    window.Promise.resolve().then(() => {\r\n      called = false\r\n      fn()\r\n    })\r\n  }\r\n}\r\n\r\nexport function taskDebounce(fn) {\r\n  let scheduled = false;\r\n  return () => {\r\n    if (!scheduled) {\r\n      scheduled = true;\r\n      setTimeout(() => {\r\n        scheduled = false;\r\n        fn();\r\n      }, timeoutDuration);\r\n    }\r\n  };\r\n}\r\n\r\nconst supportsMicroTasks = isBrowser && window.Promise\r\n\r\n\r\n/**\r\n* Create a debounced version of a method, that's asynchronously deferred\r\n* but called in the minimum time possible.\r\n*\r\n* @method\r\n* @memberof Popper.Utils\r\n* @argument {Function} fn\r\n* @returns {Function}\r\n*/\r\nexport default (supportsMicroTasks\r\n  ? microtaskDebounce\r\n  : taskDebounce);\r\n","/**\r\n * Mimics the `find` method of Array\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nexport default function find(arr, check) {\r\n  // use native find if supported\r\n  if (Array.prototype.find) {\r\n    return arr.find(check);\r\n  }\r\n\r\n  // use `filter` to obtain the same behavior of `find`\r\n  return arr.filter(check)[0];\r\n}\r\n","import find from './find';\r\n\r\n/**\r\n * Return the index of the matching object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nexport default function findIndex(arr, prop, value) {\r\n  // use native findIndex if supported\r\n  if (Array.prototype.findIndex) {\r\n    return arr.findIndex(cur => cur[prop] === value);\r\n  }\r\n\r\n  // use `find` + `indexOf` if `findIndex` isn't supported\r\n  const match = find(arr, obj => obj[prop] === value);\r\n  return arr.indexOf(match);\r\n}\r\n","import getWindowSizes from './getWindowSizes';\r\nimport getClientRect from './getClientRect';\r\n\r\n/**\r\n * Get the position of the given element, relative to its offset parent\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Element} element\r\n * @return {Object} position - Coordinates of the element and its `scrollTop`\r\n */\r\nexport default function getOffsetRect(element) {\r\n  let elementRect;\r\n  if (element.nodeName === 'HTML' || element.nodeName === 'html') {\r\n    const { width, height } = getWindowSizes(element.ownerDocument);\r\n    elementRect = {\r\n      width,\r\n      height,\r\n      left: 0,\r\n      top: 0,\r\n    };\r\n  } else {\r\n    elementRect = {\r\n      width: element.offsetWidth,\r\n      height: element.offsetHeight,\r\n      left: element.offsetLeft,\r\n      top: element.offsetTop,\r\n    };\r\n  }\r\n\r\n  // position\r\n  return getClientRect(elementRect);\r\n}\r\n","/**\r\n * Get the outer sizes of the given element (offset size + margins)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Object} object containing width and height properties\r\n */\r\nexport default function getOuterSizes(element) {\r\n  const window = element.ownerDocument.defaultView;\r\n  const styles = window.getComputedStyle(element);\r\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\r\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\r\n  const result = {\r\n    width: element.offsetWidth + y,\r\n    height: element.offsetHeight + x,\r\n  };\r\n  return result;\r\n}\r\n","/**\r\n * Get the opposite placement of the given one\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement\r\n * @returns {String} flipped placement\r\n */\r\nexport default function getOppositePlacement(placement) {\r\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\r\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\r\n}\r\n","import getOuterSizes from './getOuterSizes';\r\nimport getOppositePlacement from './getOppositePlacement';\r\n\r\n/**\r\n * Get offsets to the popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} position - CSS position the Popper will get applied\r\n * @param {HTMLElement} popper - the popper element\r\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\r\n * @param {String} placement - one of the valid placement options\r\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\r\n */\r\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\r\n  placement = placement.split('-')[0];\r\n\r\n  // Get popper node sizes\r\n  const popperRect = getOuterSizes(popper);\r\n\r\n  // Add position, width and height to our offsets object\r\n  const popperOffsets = {\r\n    width: popperRect.width,\r\n    height: popperRect.height,\r\n  };\r\n\r\n  // depending by the popper placement we have to compute its offsets slightly differently\r\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\r\n  const mainSide = isHoriz ? 'top' : 'left';\r\n  const secondarySide = isHoriz ? 'left' : 'top';\r\n  const measurement = isHoriz ? 'height' : 'width';\r\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\r\n\r\n  popperOffsets[mainSide] =\r\n    referenceOffsets[mainSide] +\r\n    referenceOffsets[measurement] / 2 -\r\n    popperRect[measurement] / 2;\r\n  if (placement === secondarySide) {\r\n    popperOffsets[secondarySide] =\r\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\r\n  } else {\r\n    popperOffsets[secondarySide] =\r\n      referenceOffsets[getOppositePlacement(secondarySide)];\r\n  }\r\n\r\n  return popperOffsets;\r\n}\r\n","import findCommonOffsetParent from './findCommonOffsetParent';\r\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\r\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\r\nimport getReferenceNode from './getReferenceNode';\r\n\r\n/**\r\n * Get offsets to the reference element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} state\r\n * @param {Element} popper - the popper element\r\n * @param {Element} reference - the reference element (the popper will be relative to this)\r\n * @param {Element} fixedPosition - is in fixed position mode\r\n * @returns {Object} An object containing the offsets which will be applied to the popper\r\n */\r\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\r\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\r\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\r\n}\r\n","/**\r\n * Get the prefixed supported property name\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} property (camelCase)\r\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\r\n */\r\nexport default function getSupportedPropertyName(property) {\r\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\r\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\r\n\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefix = prefixes[i];\r\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\r\n    if (typeof document.body.style[toCheck] !== 'undefined') {\r\n      return toCheck;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Check if the given variable is a function\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Any} functionToCheck - variable to check\r\n * @returns {Boolean} answer to: is a function?\r\n */\r\nexport default function isFunction(functionToCheck) {\r\n  const getType = {};\r\n  return (\r\n    functionToCheck &&\r\n    getType.toString.call(functionToCheck) === '[object Function]'\r\n  );\r\n}\r\n","/**\r\n * Helper used to know if the given modifier is enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @returns {Boolean}\r\n */\r\nexport default function isModifierEnabled(modifiers, modifierName) {\r\n  return modifiers.some(\r\n    ({ name, enabled }) => enabled && name === modifierName\r\n  );\r\n}\r\n","import find from './find';\r\n\r\n/**\r\n * Helper used to know if the given modifier depends from another one.<br />\r\n * It checks if the needed modifier is listed and enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Array} modifiers - list of modifiers\r\n * @param {String} requestingName - name of requesting modifier\r\n * @param {String} requestedName - name of requested modifier\r\n * @returns {Boolean}\r\n */\r\nexport default function isModifierRequired(\r\n  modifiers,\r\n  requestingName,\r\n  requestedName\r\n) {\r\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\r\n\r\n  const isRequired =\r\n    !!requesting &&\r\n    modifiers.some(modifier => {\r\n      return (\r\n        modifier.name === requestedName &&\r\n        modifier.enabled &&\r\n        modifier.order < requesting.order\r\n      );\r\n    });\r\n\r\n  if (!isRequired) {\r\n    const requesting = `\\`${requestingName}\\``;\r\n    const requested = `\\`${requestedName}\\``;\r\n    console.warn(\r\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\r\n    );\r\n  }\r\n  return isRequired;\r\n}\r\n","/**\r\n * Tells if a given input is a number\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {*} input to check\r\n * @return {Boolean}\r\n */\r\nexport default function isNumeric(n) {\r\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n","/**\r\n * Get the window associated with the element\r\n * @argument {Element} element\r\n * @returns {Window}\r\n */\r\nexport default function getWindow(element) {\r\n  const ownerDocument = element.ownerDocument;\r\n  return ownerDocument ? ownerDocument.defaultView : window;\r\n}\r\n","import getWindow from './getWindow';\r\n\r\n/**\r\n * Remove event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nexport default function removeEventListeners(reference, state) {\r\n  // Remove resize event listener on window\r\n  getWindow(reference).removeEventListener('resize', state.updateBound);\r\n\r\n  // Remove scroll event listener on scroll parents\r\n  state.scrollParents.forEach(target => {\r\n    target.removeEventListener('scroll', state.updateBound);\r\n  });\r\n\r\n  // Reset state\r\n  state.updateBound = null;\r\n  state.scrollParents = [];\r\n  state.scrollElement = null;\r\n  state.eventsEnabled = false;\r\n  return state;\r\n}\r\n","import isFunction from './isFunction';\r\nimport findIndex from './findIndex';\r\nimport getClientRect from '../utils/getClientRect';\r\n\r\n/**\r\n * Loop trough the list of modifiers and run them in order,\r\n * each of them will then edit the data object.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {dataObject} data\r\n * @param {Array} modifiers\r\n * @param {String} ends - Optional modifier name used as stopper\r\n * @returns {dataObject}\r\n */\r\nexport default function runModifiers(modifiers, data, ends) {\r\n  const modifiersToRun = ends === undefined\r\n    ? modifiers\r\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\r\n\r\n  modifiersToRun.forEach(modifier => {\r\n    if (modifier['function']) { // eslint-disable-line dot-notation\r\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\r\n    }\r\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\r\n    if (modifier.enabled && isFunction(fn)) {\r\n      // Add properties to offsets to make them a complete clientRect object\r\n      // we do this before each modifier to make sure the previous one doesn't\r\n      // mess with these values\r\n      data.offsets.popper = getClientRect(data.offsets.popper);\r\n      data.offsets.reference = getClientRect(data.offsets.reference);\r\n\r\n      data = fn(data, modifier);\r\n    }\r\n  });\r\n\r\n  return data;\r\n}\r\n","/**\r\n * Set the attributes to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the attributes to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nexport default function setAttributes(element, attributes) {\r\n  Object.keys(attributes).forEach(function(prop) {\r\n    const value = attributes[prop];\r\n    if (value !== false) {\r\n      element.setAttribute(prop, attributes[prop]);\r\n    } else {\r\n      element.removeAttribute(prop);\r\n    }\r\n  });\r\n}\r\n","import isNumeric from './isNumeric';\r\n\r\n/**\r\n * Set the style to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the style to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nexport default function setStyles(element, styles) {\r\n  Object.keys(styles).forEach(prop => {\r\n    let unit = '';\r\n    // add unit if the value is numeric and is one of the following\r\n    if (\r\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\r\n        -1 &&\r\n      isNumeric(styles[prop])\r\n    ) {\r\n      unit = 'px';\r\n    }\r\n    element.style[prop] = styles[prop] + unit;\r\n  });\r\n}\r\n","import getScrollParent from './getScrollParent';\r\nimport getWindow from './getWindow';\r\n\r\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\r\n  const isBody = scrollParent.nodeName === 'BODY' || scrollParent.nodeName === 'body';\r\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\r\n  target.addEventListener(event, callback, { passive: true });\r\n\r\n  if (!isBody) {\r\n    attachToScrollParents(\r\n      getScrollParent(target.parentNode),\r\n      event,\r\n      callback,\r\n      scrollParents\r\n    );\r\n  }\r\n  scrollParents.push(target);\r\n}\r\n\r\n/**\r\n * Setup needed event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nexport default function setupEventListeners(\r\n  reference,\r\n  options,\r\n  state,\r\n  updateBound\r\n) {\r\n  // Resize event listener on window\r\n  state.updateBound = updateBound;\r\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\r\n\r\n  // Scroll event listener on scroll parents\r\n  const scrollElement = getScrollParent(reference);\r\n  attachToScrollParents(\r\n    scrollElement,\r\n    'scroll',\r\n    state.updateBound,\r\n    state.scrollParents\r\n  );\r\n  state.scrollElement = scrollElement;\r\n  state.eventsEnabled = true;\r\n\r\n  return state;\r\n}\r\n","import computeAutoPlacement from './computeAutoPlacement';\r\nimport debounce from './debounce';\r\nimport findIndex from './findIndex';\r\nimport getBordersSize from './getBordersSize';\r\nimport getBoundaries from './getBoundaries';\r\nimport getBoundingClientRect from './getBoundingClientRect';\r\nimport getClientRect from './getClientRect';\r\nimport getOffsetParent from './getOffsetParent';\r\nimport getOffsetRect from './getOffsetRect';\r\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\r\nimport getOuterSizes from './getOuterSizes';\r\nimport getParentNode from './getParentNode';\r\nimport getPopperOffsets from './getPopperOffsets';\r\nimport getReferenceOffsets from './getReferenceOffsets';\r\nimport getScroll from './getScroll';\r\nimport getScrollParent from './getScrollParent';\r\nimport getStyleComputedProperty from './getStyleComputedProperty';\r\nimport getSupportedPropertyName from './getSupportedPropertyName';\r\nimport getWindowSizes from './getWindowSizes';\r\nimport isFixed from './isFixed';\r\nimport isFunction from './isFunction';\r\nimport isModifierEnabled from './isModifierEnabled';\r\nimport isModifierRequired from './isModifierRequired';\r\nimport isNumeric from './isNumeric';\r\nimport removeEventListeners from './removeEventListeners';\r\nimport runModifiers from './runModifiers';\r\nimport setAttributes from './setAttributes';\r\nimport setStyles from './setStyles';\r\nimport setupEventListeners from './setupEventListeners';\r\n\r\n/** @namespace Popper.Utils */\r\nexport {\r\n  computeAutoPlacement,\r\n  debounce,\r\n  findIndex,\r\n  getBordersSize,\r\n  getBoundaries,\r\n  getBoundingClientRect,\r\n  getClientRect,\r\n  getOffsetParent,\r\n  getOffsetRect,\r\n  getOffsetRectRelativeToArbitraryNode,\r\n  getOuterSizes,\r\n  getParentNode,\r\n  getPopperOffsets,\r\n  getReferenceOffsets,\r\n  getScroll,\r\n  getScrollParent,\r\n  getStyleComputedProperty,\r\n  getSupportedPropertyName,\r\n  getWindowSizes,\r\n  isFixed,\r\n  isFunction,\r\n  isModifierEnabled,\r\n  isModifierRequired,\r\n  isNumeric,\r\n  removeEventListeners,\r\n  runModifiers,\r\n  setAttributes,\r\n  setStyles,\r\n  setupEventListeners,\r\n};\r\n\r\n// This is here just for backward compatibility with versions lower than v1.10.3\r\n// you should import the utilities using named exports, if you want them all use:\r\n// ```\r\n// import * as PopperUtils from 'popper-utils';\r\n// ```\r\n// The default export will be removed in the next major version.\r\nexport default {\r\n  computeAutoPlacement,\r\n  debounce,\r\n  findIndex,\r\n  getBordersSize,\r\n  getBoundaries,\r\n  getBoundingClientRect,\r\n  getClientRect,\r\n  getOffsetParent,\r\n  getOffsetRect,\r\n  getOffsetRectRelativeToArbitraryNode,\r\n  getOuterSizes,\r\n  getParentNode,\r\n  getPopperOffsets,\r\n  getReferenceOffsets,\r\n  getScroll,\r\n  getScrollParent,\r\n  getStyleComputedProperty,\r\n  getSupportedPropertyName,\r\n  getWindowSizes,\r\n  isFixed,\r\n  isFunction,\r\n  isModifierEnabled,\r\n  isModifierRequired,\r\n  isNumeric,\r\n  removeEventListeners,\r\n  runModifiers,\r\n  setAttributes,\r\n  setStyles,\r\n  setupEventListeners,\r\n};\r\n"],"names":["element","nodeType","window","ownerDocument","defaultView","css","getComputedStyle","property","nodeName","parentNode","host","document","body","getStyleComputedProperty","overflow","overflowX","overflowY","test","getScrollParent","getParentNode","reference","referenceNode","navigator","isIE10","isBrowser","userAgent","version","isIE11","documentElement","noOffsetParent","isIE","offsetParent","nextElementSibling","toUpperCase","indexOf","getOffsetParent","firstElementChild","node","getRoot","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","parseFloat","styles","Math","max","parseInt","computedStyle","getSize","offsets","width","height","rect","getBoundingClientRect","result","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","display","getBordersSize","getClientRect","fixedPosition","runIsIE","isHTML","parent","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","excludeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","offset","isFixed","parentElement","el","boundaries","getFixedPositionOffsetParent","getReferenceNode","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","padding","isPaddingNumber","placement","getBoundaries","rects","refRect","sortedAreas","Object","keys","map","getArea","sort","b","area","a","filteredAreas","filter","computedPlacement","length","key","variation","split","longerTimeoutBrowsers","timeoutDuration","i","called","Promise","resolve","then","scheduled","supportsMicroTasks","Array","prototype","find","arr","findIndex","cur","match","obj","elementRect","offsetLeft","offsetTop","x","marginBottom","y","marginRight","hash","replace","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","commonOffsetParent","prefixes","upperProp","charAt","slice","prefix","toCheck","style","functionToCheck","getType","toString","call","modifiers","some","name","enabled","requesting","isRequired","warn","requested","n","isNaN","isFinite","removeEventListener","state","updateBound","scrollParents","forEach","scrollElement","eventsEnabled","modifiersToRun","ends","fn","isFunction","data","value","attributes","removeAttribute","setAttribute","unit","isNumeric","isBody","target","addEventListener","passive","push"],"mappings":"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"}