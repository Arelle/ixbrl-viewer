{"version":3,"file":"popper.min.js","sources":["../../src/utils/debounce.js","../../src/utils/isBrowser.js","../../src/utils/isFunction.js","../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/getReferenceNode.js","../../src/utils/isIE.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getFixedPositionOffsetParent.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/runModifiers.js","../../src/methods/update.js","../../src/utils/isModifierEnabled.js","../../src/utils/getSupportedPropertyName.js","../../src/methods/destroy.js","../../src/utils/getWindow.js","../../src/utils/setupEventListeners.js","../../src/methods/enableEventListeners.js","../../src/utils/removeEventListeners.js","../../src/methods/disableEventListeners.js","../../src/utils/isNumeric.js","../../src/utils/setStyles.js","../../src/utils/setAttributes.js","../../src/modifiers/applyStyle.js","../../src/utils/getRoundedOffsets.js","../../src/modifiers/computeStyle.js","../../src/utils/isModifierRequired.js","../../src/modifiers/arrow.js","../../src/utils/getOppositeVariation.js","../../src/methods/placements.js","../../src/utils/clockwise.js","../../src/modifiers/flip.js","../../src/modifiers/keepTogether.js","../../src/modifiers/offset.js","../../src/modifiers/preventOverflow.js","../../src/modifiers/shift.js","../../src/modifiers/hide.js","../../src/modifiers/inner.js","../../src/modifiers/index.js","../../src/methods/defaults.js","../../src/index.js"],"sourcesContent":["import isBrowser from './isBrowser';\r\n\r\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\r\nlet timeoutDuration = 0;\r\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\r\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\r\n    timeoutDuration = 1;\r\n    break;\r\n  }\r\n}\r\n\r\nexport function microtaskDebounce(fn) {\r\n  let called = false\r\n  return () => {\r\n    if (called) {\r\n      return\r\n    }\r\n    called = true\r\n    window.Promise.resolve().then(() => {\r\n      called = false\r\n      fn()\r\n    })\r\n  }\r\n}\r\n\r\nexport function taskDebounce(fn) {\r\n  let scheduled = false;\r\n  return () => {\r\n    if (!scheduled) {\r\n      scheduled = true;\r\n      setTimeout(() => {\r\n        scheduled = false;\r\n        fn();\r\n      }, timeoutDuration);\r\n    }\r\n  };\r\n}\r\n\r\nconst supportsMicroTasks = isBrowser && window.Promise\r\n\r\n\r\n/**\r\n* Create a debounced version of a method, that's asynchronously deferred\r\n* but called in the minimum time possible.\r\n*\r\n* @method\r\n* @memberof Popper.Utils\r\n* @argument {Function} fn\r\n* @returns {Function}\r\n*/\r\nexport default (supportsMicroTasks\r\n  ? microtaskDebounce\r\n  : taskDebounce);\r\n","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\r\n","/**\r\n * Check if the given variable is a function\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Any} functionToCheck - variable to check\r\n * @returns {Boolean} answer to: is a function?\r\n */\r\nexport default function isFunction(functionToCheck) {\r\n  const getType = {};\r\n  return (\r\n    functionToCheck &&\r\n    getType.toString.call(functionToCheck) === '[object Function]'\r\n  );\r\n}\r\n","/**\r\n * Get CSS computed property of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Eement} element\r\n * @argument {String} property\r\n */\r\nexport default function getStyleComputedProperty(element, property) {\r\n  if (element.nodeType !== 1) {\r\n    return [];\r\n  }\r\n  // NOTE: 1 DOM access here\r\n  const window = element.ownerDocument.defaultView;\r\n  const css = window.getComputedStyle(element, null);\r\n  return property ? css[property] : css;\r\n}\r\n","/**\r\n * Returns the parentNode or the host of the element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} parent\r\n */\r\nexport default function getParentNode(element) {\r\n  if (element.nodeName === 'HTML' || element.nodeName === 'html') {\r\n    return element;\r\n  }\r\n  return element.parentNode || element.host;\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport getParentNode from './getParentNode';\r\n\r\n/**\r\n * Returns the scrolling parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} scroll parent\r\n */\r\nexport default function getScrollParent(element) {\r\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\r\n  if (!element) {\r\n    return document.body\r\n  }\r\n\r\n  switch (element.nodeName) {\r\n    case 'HTML':\r\n    case 'html':\r\n    case 'BODY':\r\n    case 'body':\r\n      return element.ownerDocument.body\r\n    case '#document':\r\n      return element.body\r\n  }\r\n\r\n  // Firefox want us to check `-x` and `-y` variations as well\r\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\r\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\r\n    return element;\r\n  }\r\n\r\n  return getScrollParent(getParentNode(element));\r\n}\r\n","/**\r\n * Returns the reference node of the reference object, or the reference object itself.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\r\n * @returns {Element} parent\r\n */\r\nexport default function getReferenceNode(reference) {\r\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\r\n}\r\n","import isBrowser from './isBrowser';\r\n\r\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\r\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\r\n\r\n/**\r\n * Determines if the browser is Internet Explorer\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Number} version to check\r\n * @returns {Boolean} isIE\r\n */\r\nexport default function isIE(version) {\r\n  if (version === 11) {\r\n    return isIE11;\r\n  }\r\n  if (version === 10) {\r\n    return isIE10;\r\n  }\r\n  return isIE11 || isIE10;\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport isIE from './isIE';\r\n/**\r\n * Returns the offset parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} offset parent\r\n */\r\nexport default function getOffsetParent(element) {\r\n  if (!element) {\r\n    return document.documentElement; // semyonc: review later\r\n  }\r\n\r\n  const noOffsetParent = isIE(10) ? element.ownerDocument.body : null;\r\n\r\n  // NOTE: 1 DOM access here\r\n  let offsetParent = element.offsetParent || null;\r\n  // Skip hidden elements which don't have an offsetParent\r\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\r\n    offsetParent = (element = element.nextElementSibling).offsetParent;\r\n  }\r\n\r\n  const nodeName = offsetParent && offsetParent.nodeName.toUpperCase();\r\n\r\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\r\n    return element ? element.ownerDocument.documentElement : document.documentElement;\r\n  }\r\n\r\n  // .offsetParent will return the closest TH, TD or TABLE in case\r\n  // no offsetParent is present, I hate this job...\r\n  if (\r\n    ['TH', 'TD', 'TABLE'].indexOf(nodeName) !== -1 &&\r\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\r\n  ) {\r\n    return getOffsetParent(offsetParent);\r\n  }\r\n\r\n  return offsetParent;\r\n}\r\n","import getOffsetParent from './getOffsetParent';\r\n\r\nexport default function isOffsetContainer(element) {\r\n  const { nodeName } = element;\r\n  if (nodeName === 'BODY' || nodeName === 'body') {\r\n    return true; // Bug!\r\n  }\r\n  return (\r\n    nodeName === 'HTML' || nodeName === 'html' || getOffsetParent(element.firstElementChild) === element\r\n  );\r\n}\r\n","/**\r\n * Finds the root node (document, shadowDOM root) of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} node\r\n * @returns {Element} root node\r\n */\r\nexport default function getRoot(node) {\r\n  if (node.parentNode !== null) {\r\n    return getRoot(node.parentNode);\r\n  }\r\n\r\n  return node;\r\n}\r\n","import isOffsetContainer from './isOffsetContainer';\r\nimport getRoot from './getRoot';\r\nimport getOffsetParent from './getOffsetParent';\r\n\r\n/**\r\n * Finds the offset parent common to the two provided nodes\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element1\r\n * @argument {Element} element2\r\n * @returns {Element} common offset parent\r\n */\r\nexport default function findCommonOffsetParent(element1, element2) {\r\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\r\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\r\n    return document.documentElement;\r\n  }\r\n\r\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\r\n  const order =\r\n    element1.compareDocumentPosition(element2) &\r\n    Node.DOCUMENT_POSITION_FOLLOWING;\r\n  const start = order ? element1 : element2;\r\n  const end = order ? element2 : element1;\r\n\r\n  // Get common ancestor container\r\n  const range = element1.ownerDocument.createRange();\r\n  range.setStart(start, 0);\r\n  range.setEnd(end, 0);\r\n  const { commonAncestorContainer } = range;\r\n\r\n  // Both nodes are inside #document\r\n  if (\r\n    (element1 !== commonAncestorContainer &&\r\n      element2 !== commonAncestorContainer) ||\r\n    start.contains(end)\r\n  ) {\r\n    if (isOffsetContainer(commonAncestorContainer)) {\r\n      return commonAncestorContainer;\r\n    }\r\n\r\n    return getOffsetParent(commonAncestorContainer);\r\n  }\r\n\r\n  // one of the nodes is inside shadowDOM, find which one\r\n  const element1root = getRoot(element1);\r\n  if (element1root.host) {\r\n    return findCommonOffsetParent(element1root.host, element2);\r\n  } else {\r\n    return findCommonOffsetParent(element1, getRoot(element2).host);\r\n  }\r\n}\r\n","/**\r\n * Gets the scroll value of the given element in the given side (top and left)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {String} side `top` or `left`\r\n * @returns {number} amount of scrolled pixels\r\n */\r\nexport default function getScroll(element, side = 'top') {\r\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\r\n  const nodeName = element.nodeName;\r\n\r\n  if (nodeName === 'BODY' || nodeName === 'body' || nodeName === 'HTML' || nodeName === 'html') {\r\n    const html = element.ownerDocument.documentElement;\r\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\r\n    return scrollingElement[upperSide];\r\n  }\r\n\r\n  return element[upperSide];\r\n}\r\n","import getScroll from './getScroll';\r\n\r\n/*\r\n * Sum or subtract the element scroll values (left and top) from a given rect object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} rect - Rect object you want to change\r\n * @param {HTMLElement} element - The element from the function reads the scroll values\r\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\r\n * @return {Object} rect - The modifier rect object\r\n */\r\nexport default function includeScroll(rect, element, subtract = false) {\r\n  const scrollTop = getScroll(element, 'top');\r\n  const scrollLeft = getScroll(element, 'left');\r\n  const modifier = subtract ? -1 : 1;\r\n  rect.top += scrollTop * modifier;\r\n  rect.bottom += scrollTop * modifier;\r\n  rect.left += scrollLeft * modifier;\r\n  rect.right += scrollLeft * modifier;\r\n  return rect;\r\n}\r\n","/*\r\n * Helper to detect borders of a given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {CSSStyleDeclaration} styles\r\n * Result of `getStyleComputedProperty` on the given element\r\n * @param {String} axis - `x` or `y`\r\n * @return {number} borders - The borders size of the given axis\r\n */\r\n\r\nexport default function getBordersSize(styles, axis) {\r\n  const sideA = axis === 'x' ? 'Left' : 'Top';\r\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\r\n\r\n  return (\r\n    parseFloat(styles[`border${sideA}Width`], 10) +\r\n    parseFloat(styles[`border${sideB}Width`], 10)\r\n  );\r\n}\r\n","import isIE from './isIE';\r\n\r\nfunction getSize(axis, body, html, computedStyle) {\r\n  return Math.max(\r\n    body[`offset${axis}`],\r\n    body[`scroll${axis}`],\r\n    html[`client${axis}`],\r\n    html[`offset${axis}`],\r\n    html[`scroll${axis}`],\r\n    isIE(10)\r\n      ? (parseInt(html[`offset${axis}`]) + \r\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \r\n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\r\n    : 0 \r\n  );\r\n}\r\n\r\nexport default function getWindowSizes(document) {\r\n  const body = document.body;\r\n  const html = document.documentElement;\r\n  const computedStyle = isIE(10) && getComputedStyle(html);\r\n\r\n  return {\r\n    height: getSize('Height', body, html, computedStyle),\r\n    width: getSize('Width', body, html, computedStyle),\r\n  };\r\n}\r\n","/**\r\n * Given element offsets, generate an output similar to getBoundingClientRect\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} offsets\r\n * @returns {Object} ClientRect like output\r\n */\r\nexport default function getClientRect(offsets) {\r\n  return {\r\n    ...offsets,\r\n    right: offsets.left + offsets.width,\r\n    bottom: offsets.top + offsets.height,\r\n  };\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport getBordersSize from './getBordersSize';\r\nimport getWindowSizes from './getWindowSizes';\r\nimport getScroll from './getScroll';\r\nimport getClientRect from './getClientRect';\r\nimport isIE from './isIE';\r\n\r\n/**\r\n * Get bounding client rect of given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} element\r\n * @return {Object} client rect\r\n */\r\nexport default function getBoundingClientRect(element) {\r\n  let rect = {};\r\n\r\n  // IE10 10 FIX: Please, don't ask, the element isn't\r\n  // considered in DOM in some circumstances...\r\n  // This isn't reproducible in IE10 compatibility mode of IE11\r\n  try {\r\n    if (isIE(10)) {\r\n      rect = element.getBoundingClientRect();\r\n      const scrollTop = getScroll(element, 'top');\r\n      const scrollLeft = getScroll(element, 'left');\r\n      rect.top += scrollTop;\r\n      rect.left += scrollLeft;\r\n      rect.bottom += scrollTop;\r\n      rect.right += scrollLeft;\r\n    }\r\n    else {\r\n      rect = element.getBoundingClientRect();\r\n    }\r\n  }\r\n  catch(e){}\r\n\r\n  const result = {\r\n    left: rect.left,\r\n    top: rect.top,\r\n    width: rect.right - rect.left,\r\n    height: rect.bottom - rect.top,\r\n  };\r\n\r\n  // subtract scrollbar size from sizes\r\n  const sizes = (element.nodeName === 'HTML' || element.nodeName === 'html') ? getWindowSizes(element.ownerDocument) : {};\r\n  const width =\r\n    sizes.width || element.clientWidth || result.width;\r\n  const height =\r\n    sizes.height || element.clientHeight || result.height;\r\n\r\n  let horizScrollbar = element.offsetWidth - width;\r\n  let vertScrollbar = element.offsetHeight - height;\r\n\r\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\r\n  // we make this check conditional for performance reasons\r\n  if (horizScrollbar || vertScrollbar) { \r\n    const styles = getStyleComputedProperty(element);\r\n\r\n    if (styles.display !== 'inline') { \r\n      // semyonc: http://www.w3.org/TR/cssom-view/#dom-element-clientwidth \r\n      //    If the element has no associated CSS layout box or if the CSS layout box is inline the clientWidth and clientHeight return 0\r\n      horizScrollbar -= getBordersSize(styles, 'x');\r\n      vertScrollbar -= getBordersSize(styles, 'y');\r\n\r\n      result.width -= horizScrollbar;\r\n      result.height -= vertScrollbar;\r\n    }\r\n  }\r\n\r\n  return getClientRect(result);\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport includeScroll from './includeScroll';\r\nimport getScrollParent from './getScrollParent';\r\nimport getBoundingClientRect from './getBoundingClientRect';\r\nimport runIsIE from './isIE';\r\nimport getClientRect from './getClientRect';\r\n\r\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\r\n  const isIE10 = runIsIE(10);\r\n  const isHTML = (parent.nodeName === 'HTML' || parent.nodeName === 'html');\r\n  const childrenRect = getBoundingClientRect(children);\r\n  const parentRect = getBoundingClientRect(parent);\r\n  const scrollParent = getScrollParent(children);\r\n\r\n  const styles = getStyleComputedProperty(parent);\r\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\r\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\r\n\r\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\r\n  if(fixedPosition && isHTML) {\r\n    parentRect.top = Math.max(parentRect.top, 0);\r\n    parentRect.left = Math.max(parentRect.left, 0);\r\n  }\r\n  let offsets = getClientRect({\r\n    top: childrenRect.top - parentRect.top - borderTopWidth,\r\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\r\n    width: childrenRect.width,\r\n    height: childrenRect.height,\r\n  });\r\n  offsets.marginTop = 0;\r\n  offsets.marginLeft = 0;\r\n\r\n  // Subtract margins of documentElement in case it's being used as parent\r\n  // we do this only on HTML because it's the only element that behaves\r\n  // differently when margins are applied to it. The margins are included in\r\n  // the box of the documentElement, in the other cases not.\r\n  if (!isIE10 && isHTML) {\r\n    const marginTop = parseFloat(styles.marginTop, 10);\r\n    const marginLeft = parseFloat(styles.marginLeft, 10);\r\n\r\n    offsets.top -= borderTopWidth - marginTop;\r\n    offsets.bottom -= borderTopWidth - marginTop;\r\n    offsets.left -= borderLeftWidth - marginLeft;\r\n    offsets.right -= borderLeftWidth - marginLeft;\r\n\r\n    // Attach marginTop and marginLeft because in some circumstances we may need them\r\n    offsets.marginTop = marginTop;\r\n    offsets.marginLeft = marginLeft;\r\n  }\r\n\r\n  if (\r\n    isIE10 && !fixedPosition\r\n      ? parent.contains(scrollParent)\r\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY' && scrollParent.nodeName !== 'body'\r\n  ) {\r\n    offsets = includeScroll(offsets, parent);\r\n  }\r\n\r\n  return offsets;\r\n}\r\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\r\nimport getScroll from './getScroll';\r\nimport getClientRect from './getClientRect';\r\n\r\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\r\n  const html = element.ownerDocument.documentElement;\r\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\r\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\r\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\r\n\r\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\r\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\r\n\r\n  const offset = {\r\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\r\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\r\n    width,\r\n    height,\r\n  };\r\n\r\n  return getClientRect(offset);\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport getParentNode from './getParentNode';\r\n\r\n/**\r\n * Check if the given element is fixed or is inside a fixed parent\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {Element} customContainer\r\n * @returns {Boolean} answer to \"isFixed?\"\r\n */\r\nexport default function isFixed(element) {\r\n  const nodeName = element.nodeName;\r\n  if (nodeName === 'BODY' ||nodeName === 'body' || nodeName === 'HTML' || nodeName === 'html') {\r\n    return false;\r\n  }\r\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\r\n    return true;\r\n  }\r\n  const parentNode = getParentNode(element);\r\n  if (!parentNode) {\r\n    return false;\r\n  }\r\n  return isFixed(parentNode);\r\n}\r\n","import getStyleComputedProperty from './getStyleComputedProperty';\r\nimport isIE from './isIE';\r\n/**\r\n * Finds the first parent of an element that has a transformed property defined\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} first transformed parent or documentElement\r\n */\r\n\r\nexport default function getFixedPositionOffsetParent(element) {\r\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\r\n   if (!element || !element.parentElement || isIE()) {\r\n    return document.documentElement; // semyonc: review later\r\n  }\r\n  let el = element.parentElement;\r\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\r\n    el = el.parentElement;\r\n  }\r\n  return el || element.ownerDocument.documentElement;\r\n\r\n}\r\n","import getScrollParent from './getScrollParent';\r\nimport getParentNode from './getParentNode';\r\nimport getReferenceNode from './getReferenceNode';\r\nimport findCommonOffsetParent from './findCommonOffsetParent';\r\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\r\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\r\nimport getWindowSizes from './getWindowSizes';\r\nimport isFixed from './isFixed';\r\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\r\n\r\n/**\r\n * Computed the boundaries limits and return them\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} popper\r\n * @param {HTMLElement} reference\r\n * @param {number} padding\r\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\r\n * @param {Boolean} fixedPosition - Is in fixed position mode\r\n * @returns {Object} Coordinates of the boundaries\r\n */\r\nexport default function getBoundaries(\r\n  popper,\r\n  reference,\r\n  padding,\r\n  boundariesElement,\r\n  fixedPosition = false\r\n) {\r\n  // NOTE: 1 DOM access here\r\n\r\n  let boundaries = { top: 0, left: 0 };\r\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\r\n\r\n  // Handle viewport case\r\n  if (boundariesElement === 'viewport' ) {\r\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\r\n  }\r\n\r\n  else {\r\n    // Handle other cases based on DOM element used as boundaries\r\n    let boundariesNode;\r\n    if (boundariesElement === 'scrollParent') {\r\n      boundariesNode = getScrollParent(getParentNode(reference));\r\n      if (boundariesNode.nodeName === 'BODY' || boundariesNode.nodeName === 'body') {\r\n        boundariesNode = popper.ownerDocument.documentElement;\r\n      }\r\n    } else if (boundariesElement === 'window') {\r\n      boundariesNode = popper.ownerDocument.documentElement;\r\n    } else {\r\n      boundariesNode = boundariesElement;\r\n    }\r\n\r\n    const offsets = getOffsetRectRelativeToArbitraryNode(\r\n      boundariesNode,\r\n      offsetParent,\r\n      fixedPosition\r\n    );\r\n\r\n    // In case of HTML, we need a different computation\r\n    if ((boundariesNode.nodeName === 'HTML' || boundariesNode.nodeName === 'html') && !isFixed(offsetParent)) {\r\n      const { height, width } = getWindowSizes(popper.ownerDocument);\r\n      boundaries.top += offsets.top - offsets.marginTop;\r\n      boundaries.bottom = height + offsets.top;\r\n      boundaries.left += offsets.left - offsets.marginLeft;\r\n      boundaries.right = width + offsets.left;\r\n    } else {\r\n      // for all the other DOM elements, this one is good\r\n      boundaries = offsets;\r\n    }\r\n  }\r\n\r\n  // Add paddings\r\n  padding = padding || 0;\r\n  const isPaddingNumber = typeof padding === 'number';\r\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \r\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \r\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \r\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \r\n\r\n  return boundaries;\r\n}\r\n","import getBoundaries from '../utils/getBoundaries';\r\n\r\nfunction getArea({ width, height }) {\r\n  return width * height;\r\n}\r\n\r\n/**\r\n * Utility used to transform the `auto` placement to the placement with more\r\n * available space.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function computeAutoPlacement(\r\n  placement,\r\n  refRect,\r\n  popper,\r\n  reference,\r\n  boundariesElement,\r\n  padding = 0\r\n) {\r\n  if (placement.indexOf('auto') === -1) {\r\n    return placement;\r\n  }\r\n\r\n  const boundaries = getBoundaries(\r\n    popper,\r\n    reference,\r\n    padding,\r\n    boundariesElement\r\n  );\r\n\r\n  const rects = {\r\n    top: {\r\n      width: boundaries.width,\r\n      height: refRect.top - boundaries.top,\r\n    },\r\n    right: {\r\n      width: boundaries.right - refRect.right,\r\n      height: boundaries.height,\r\n    },\r\n    bottom: {\r\n      width: boundaries.width,\r\n      height: boundaries.bottom - refRect.bottom,\r\n    },\r\n    left: {\r\n      width: refRect.left - boundaries.left,\r\n      height: boundaries.height,\r\n    },\r\n  };\r\n\r\n  const sortedAreas = Object.keys(rects)\r\n    .map(key => ({\r\n      key,\r\n      ...rects[key],\r\n      area: getArea(rects[key]),\r\n    }))\r\n    .sort((a, b) => b.area - a.area);\r\n\r\n  const filteredAreas = sortedAreas.filter(\r\n    ({ width, height }) =>\r\n      width >= popper.clientWidth && height >= popper.clientHeight\r\n  );\r\n\r\n  const computedPlacement = filteredAreas.length > 0\r\n    ? filteredAreas[0].key\r\n    : sortedAreas[0].key;\r\n\r\n  const variation = placement.split('-')[1];\r\n\r\n  return computedPlacement + (variation ? `-${variation}` : '');\r\n}\r\n","import findCommonOffsetParent from './findCommonOffsetParent';\r\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\r\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\r\nimport getReferenceNode from './getReferenceNode';\r\n\r\n/**\r\n * Get offsets to the reference element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} state\r\n * @param {Element} popper - the popper element\r\n * @param {Element} reference - the reference element (the popper will be relative to this)\r\n * @param {Element} fixedPosition - is in fixed position mode\r\n * @returns {Object} An object containing the offsets which will be applied to the popper\r\n */\r\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\r\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\r\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\r\n}\r\n","/**\r\n * Get the outer sizes of the given element (offset size + margins)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Object} object containing width and height properties\r\n */\r\nexport default function getOuterSizes(element) {\r\n  const window = element.ownerDocument.defaultView;\r\n  const styles = window.getComputedStyle(element);\r\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\r\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\r\n  const result = {\r\n    width: element.offsetWidth + y,\r\n    height: element.offsetHeight + x,\r\n  };\r\n  return result;\r\n}\r\n","/**\r\n * Get the opposite placement of the given one\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement\r\n * @returns {String} flipped placement\r\n */\r\nexport default function getOppositePlacement(placement) {\r\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\r\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\r\n}\r\n","import getOuterSizes from './getOuterSizes';\r\nimport getOppositePlacement from './getOppositePlacement';\r\n\r\n/**\r\n * Get offsets to the popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} position - CSS position the Popper will get applied\r\n * @param {HTMLElement} popper - the popper element\r\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\r\n * @param {String} placement - one of the valid placement options\r\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\r\n */\r\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\r\n  placement = placement.split('-')[0];\r\n\r\n  // Get popper node sizes\r\n  const popperRect = getOuterSizes(popper);\r\n\r\n  // Add position, width and height to our offsets object\r\n  const popperOffsets = {\r\n    width: popperRect.width,\r\n    height: popperRect.height,\r\n  };\r\n\r\n  // depending by the popper placement we have to compute its offsets slightly differently\r\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\r\n  const mainSide = isHoriz ? 'top' : 'left';\r\n  const secondarySide = isHoriz ? 'left' : 'top';\r\n  const measurement = isHoriz ? 'height' : 'width';\r\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\r\n\r\n  popperOffsets[mainSide] =\r\n    referenceOffsets[mainSide] +\r\n    referenceOffsets[measurement] / 2 -\r\n    popperRect[measurement] / 2;\r\n  if (placement === secondarySide) {\r\n    popperOffsets[secondarySide] =\r\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\r\n  } else {\r\n    popperOffsets[secondarySide] =\r\n      referenceOffsets[getOppositePlacement(secondarySide)];\r\n  }\r\n\r\n  return popperOffsets;\r\n}\r\n","/**\r\n * Mimics the `find` method of Array\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nexport default function find(arr, check) {\r\n  // use native find if supported\r\n  if (Array.prototype.find) {\r\n    return arr.find(check);\r\n  }\r\n\r\n  // use `filter` to obtain the same behavior of `find`\r\n  return arr.filter(check)[0];\r\n}\r\n","import find from './find';\r\n\r\n/**\r\n * Return the index of the matching object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nexport default function findIndex(arr, prop, value) {\r\n  // use native findIndex if supported\r\n  if (Array.prototype.findIndex) {\r\n    return arr.findIndex(cur => cur[prop] === value);\r\n  }\r\n\r\n  // use `find` + `indexOf` if `findIndex` isn't supported\r\n  const match = find(arr, obj => obj[prop] === value);\r\n  return arr.indexOf(match);\r\n}\r\n","import isFunction from './isFunction';\r\nimport findIndex from './findIndex';\r\nimport getClientRect from '../utils/getClientRect';\r\n\r\n/**\r\n * Loop trough the list of modifiers and run them in order,\r\n * each of them will then edit the data object.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {dataObject} data\r\n * @param {Array} modifiers\r\n * @param {String} ends - Optional modifier name used as stopper\r\n * @returns {dataObject}\r\n */\r\nexport default function runModifiers(modifiers, data, ends) {\r\n  const modifiersToRun = ends === undefined\r\n    ? modifiers\r\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\r\n\r\n  modifiersToRun.forEach(modifier => {\r\n    if (modifier['function']) { // eslint-disable-line dot-notation\r\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\r\n    }\r\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\r\n    if (modifier.enabled && isFunction(fn)) {\r\n      // Add properties to offsets to make them a complete clientRect object\r\n      // we do this before each modifier to make sure the previous one doesn't\r\n      // mess with these values\r\n      data.offsets.popper = getClientRect(data.offsets.popper);\r\n      data.offsets.reference = getClientRect(data.offsets.reference);\r\n\r\n      data = fn(data, modifier);\r\n    }\r\n  });\r\n\r\n  return data;\r\n}\r\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\r\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\r\nimport getPopperOffsets from '../utils/getPopperOffsets';\r\nimport runModifiers from '../utils/runModifiers';\r\n\r\n/**\r\n * Updates the position of the popper, computing the new offsets and applying\r\n * the new style.<br />\r\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\r\n * @method\r\n * @memberof Popper\r\n */\r\nexport default function update() {\r\n  // if popper is destroyed, don't perform any further update\r\n  if (this.state.isDestroyed) {\r\n    return;\r\n  }\r\n\r\n  let data = {\r\n    instance: this,\r\n    styles: {},\r\n    arrowStyles: {},\r\n    attributes: {},\r\n    flipped: false,\r\n    offsets: {},\r\n  };\r\n\r\n  // compute reference element offsets\r\n  data.offsets.reference = getReferenceOffsets(\r\n    this.state,\r\n    this.popper,\r\n    this.reference,\r\n    this.options.positionFixed\r\n  );\r\n\r\n  // compute auto placement, store placement inside the data object,\r\n  // modifiers will be able to edit `placement` if needed\r\n  // and refer to originalPlacement to know the original value\r\n  data.placement = computeAutoPlacement(\r\n    this.options.placement,\r\n    data.offsets.reference,\r\n    this.popper,\r\n    this.reference,\r\n    this.options.modifiers.flip.boundariesElement,\r\n    this.options.modifiers.flip.padding\r\n  );\r\n\r\n  // store the computed placement inside `originalPlacement`\r\n  data.originalPlacement = data.placement;\r\n\r\n  data.positionFixed = this.options.positionFixed;\r\n\r\n  // compute the popper offsets\r\n  data.offsets.popper = getPopperOffsets(\r\n    this.popper,\r\n    data.offsets.reference,\r\n    data.placement\r\n  );\r\n\r\n  data.offsets.popper.position = this.options.positionFixed\r\n    ? 'fixed'\r\n    : 'absolute';\r\n\r\n  // run the modifiers\r\n  data = runModifiers(this.modifiers, data);\r\n\r\n  // the first `update` will call `onCreate` callback\r\n  // the other ones will call `onUpdate` callback\r\n  if (!this.state.isCreated) {\r\n    this.state.isCreated = true;\r\n    this.options.onCreate(data);\r\n  } else {\r\n    this.options.onUpdate(data);\r\n  }\r\n}\r\n","/**\r\n * Helper used to know if the given modifier is enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @returns {Boolean}\r\n */\r\nexport default function isModifierEnabled(modifiers, modifierName) {\r\n  return modifiers.some(\r\n    ({ name, enabled }) => enabled && name === modifierName\r\n  );\r\n}\r\n","/**\r\n * Get the prefixed supported property name\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} property (camelCase)\r\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\r\n */\r\nexport default function getSupportedPropertyName(property) {\r\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\r\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\r\n\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    const prefix = prefixes[i];\r\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\r\n    if (typeof document.body.style[toCheck] !== 'undefined') {\r\n      return toCheck;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import isModifierEnabled from '../utils/isModifierEnabled';\r\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\r\n\r\n/**\r\n * Destroys the popper.\r\n * @method\r\n * @memberof Popper\r\n */\r\nexport default function destroy() {\r\n  this.state.isDestroyed = true;\r\n\r\n  // touch DOM only if `applyStyle` modifier is enabled\r\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\r\n    this.popper.removeAttribute('x-placement');\r\n    this.popper.style.position = '';\r\n    this.popper.style.top = '';\r\n    this.popper.style.left = '';\r\n    this.popper.style.right = '';\r\n    this.popper.style.bottom = '';\r\n    this.popper.style.willChange = '';\r\n    this.popper.style[getSupportedPropertyName('transform')] = '';\r\n  }\r\n\r\n  this.disableEventListeners();\r\n\r\n  // remove the popper if user explicitly asked for the deletion on destroy\r\n  // do not use `remove` because IE11 doesn't support it\r\n  if (this.options.removeOnDestroy) {\r\n    this.popper.parentNode.removeChild(this.popper);\r\n  }\r\n  return this;\r\n}\r\n","/**\r\n * Get the window associated with the element\r\n * @argument {Element} element\r\n * @returns {Window}\r\n */\r\nexport default function getWindow(element) {\r\n  const ownerDocument = element.ownerDocument;\r\n  return ownerDocument ? ownerDocument.defaultView : window;\r\n}\r\n","import getScrollParent from './getScrollParent';\r\nimport getWindow from './getWindow';\r\n\r\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\r\n  const isBody = scrollParent.nodeName === 'BODY' || scrollParent.nodeName === 'body';\r\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\r\n  target.addEventListener(event, callback, { passive: true });\r\n\r\n  if (!isBody) {\r\n    attachToScrollParents(\r\n      getScrollParent(target.parentNode),\r\n      event,\r\n      callback,\r\n      scrollParents\r\n    );\r\n  }\r\n  scrollParents.push(target);\r\n}\r\n\r\n/**\r\n * Setup needed event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nexport default function setupEventListeners(\r\n  reference,\r\n  options,\r\n  state,\r\n  updateBound\r\n) {\r\n  // Resize event listener on window\r\n  state.updateBound = updateBound;\r\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\r\n\r\n  // Scroll event listener on scroll parents\r\n  const scrollElement = getScrollParent(reference);\r\n  attachToScrollParents(\r\n    scrollElement,\r\n    'scroll',\r\n    state.updateBound,\r\n    state.scrollParents\r\n  );\r\n  state.scrollElement = scrollElement;\r\n  state.eventsEnabled = true;\r\n\r\n  return state;\r\n}\r\n","import setupEventListeners from '../utils/setupEventListeners';\r\n\r\n/**\r\n * It will add resize/scroll events and start recalculating\r\n * position of the popper element when they are triggered.\r\n * @method\r\n * @memberof Popper\r\n */\r\nexport default function enableEventListeners() {\r\n  if (!this.state.eventsEnabled) {\r\n    this.state = setupEventListeners(\r\n      this.reference,\r\n      this.options,\r\n      this.state,\r\n      this.scheduleUpdate\r\n    );\r\n  }\r\n}\r\n","import getWindow from './getWindow';\r\n\r\n/**\r\n * Remove event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nexport default function removeEventListeners(reference, state) {\r\n  // Remove resize event listener on window\r\n  getWindow(reference).removeEventListener('resize', state.updateBound);\r\n\r\n  // Remove scroll event listener on scroll parents\r\n  state.scrollParents.forEach(target => {\r\n    target.removeEventListener('scroll', state.updateBound);\r\n  });\r\n\r\n  // Reset state\r\n  state.updateBound = null;\r\n  state.scrollParents = [];\r\n  state.scrollElement = null;\r\n  state.eventsEnabled = false;\r\n  return state;\r\n}\r\n","import removeEventListeners from '../utils/removeEventListeners';\r\n\r\n/**\r\n * It will remove resize/scroll events and won't recalculate popper position\r\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\r\n * unless you call `update` method manually.\r\n * @method\r\n * @memberof Popper\r\n */\r\nexport default function disableEventListeners() {\r\n  if (this.state.eventsEnabled) {\r\n    cancelAnimationFrame(this.scheduleUpdate);\r\n    this.state = removeEventListeners(this.reference, this.state);\r\n  }\r\n}\r\n","/**\r\n * Tells if a given input is a number\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {*} input to check\r\n * @return {Boolean}\r\n */\r\nexport default function isNumeric(n) {\r\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n","import isNumeric from './isNumeric';\r\n\r\n/**\r\n * Set the style to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the style to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nexport default function setStyles(element, styles) {\r\n  Object.keys(styles).forEach(prop => {\r\n    let unit = '';\r\n    // add unit if the value is numeric and is one of the following\r\n    if (\r\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\r\n        -1 &&\r\n      isNumeric(styles[prop])\r\n    ) {\r\n      unit = 'px';\r\n    }\r\n    element.style[prop] = styles[prop] + unit;\r\n  });\r\n}\r\n","/**\r\n * Set the attributes to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the attributes to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nexport default function setAttributes(element, attributes) {\r\n  Object.keys(attributes).forEach(function(prop) {\r\n    const value = attributes[prop];\r\n    if (value !== false) {\r\n      element.setAttribute(prop, attributes[prop]);\r\n    } else {\r\n      element.removeAttribute(prop);\r\n    }\r\n  });\r\n}\r\n","import setStyles from '../utils/setStyles';\r\nimport setAttributes from '../utils/setAttributes';\r\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\r\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\r\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The same data object\r\n */\r\nexport default function applyStyle(data) {\r\n  // any property present in `data.styles` will be applied to the popper,\r\n  // in this way we can make the 3rd party modifiers add custom styles to it\r\n  // Be aware, modifiers could override the properties defined in the previous\r\n  // lines of this modifier!\r\n  setStyles(data.instance.popper, data.styles);\r\n\r\n  // any property present in `data.attributes` will be applied to the popper,\r\n  // they will be set as HTML attributes of the element\r\n  setAttributes(data.instance.popper, data.attributes);\r\n\r\n  // if arrowElement is defined and arrowStyles has some properties\r\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\r\n    setStyles(data.arrowElement, data.arrowStyles);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Set the x-placement attribute before everything else because it could be used\r\n * to add margins to the popper margins needs to be calculated to get the\r\n * correct popper offsets.\r\n * @method\r\n * @memberof Popper.modifiers\r\n * @param {HTMLElement} reference - The reference element used to position the popper\r\n * @param {HTMLElement} popper - The HTML element used as popper\r\n * @param {Object} options - Popper.js options\r\n */\r\nexport function applyStyleOnLoad(\r\n  reference,\r\n  popper,\r\n  options,\r\n  modifierOptions,\r\n  state\r\n) {\r\n  // compute reference element offsets\r\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\r\n\r\n  // compute auto placement, store placement inside the data object,\r\n  // modifiers will be able to edit `placement` if needed\r\n  // and refer to originalPlacement to know the original value\r\n  const placement = computeAutoPlacement(\r\n    options.placement,\r\n    referenceOffsets,\r\n    popper,\r\n    reference,\r\n    options.modifiers.flip.boundariesElement,\r\n    options.modifiers.flip.padding\r\n  );\r\n\r\n  popper.setAttribute('x-placement', placement);\r\n\r\n  // Apply `position` to popper before anything else because\r\n  // without the position applied we can't guarantee correct computations\r\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\r\n\r\n  return options;\r\n}\r\n","/**\r\n * @function\r\n * @memberof Popper.Utils\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\r\n * @returns {Object} The popper's position offsets rounded\r\n *\r\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\r\n * good as it can be within reason.\r\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\r\n *\r\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\r\n * as well on High DPI screens).\r\n *\r\n * Firefox prefers no rounding for positioning and does not have blurriness on\r\n * high DPI screens.\r\n *\r\n * Only horizontal placement and left/right values need to be considered.\r\n */\r\nexport default function getRoundedOffsets(data, shouldRound) {\r\n  const { popper, reference } = data.offsets;\r\n  const { round, floor } = Math;\r\n  const noRound = v => v;\r\n  \r\n  const referenceWidth = round(reference.width);\r\n  const popperWidth = round(popper.width);\r\n  \r\n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\r\n  const isVariation = data.placement.indexOf('-') !== -1;\r\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\r\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\r\n\r\n  const horizontalToInteger = !shouldRound\r\n    ? noRound\r\n    : isVertical || isVariation || sameWidthParity\r\n    ? round\r\n    : floor;\r\n  const verticalToInteger = !shouldRound ? noRound : round;\r\n\r\n  return {\r\n    left: horizontalToInteger(\r\n      bothOddWidth && !isVariation && shouldRound\r\n        ? popper.left - 1\r\n        : popper.left\r\n    ),\r\n    top: verticalToInteger(popper.top),\r\n    bottom: verticalToInteger(popper.bottom),\r\n    right: horizontalToInteger(popper.right),\r\n  };\r\n}\r\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\r\nimport find from '../utils/find';\r\nimport getOffsetParent from '../utils/getOffsetParent';\r\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\r\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\r\nimport isBrowser from '../utils/isBrowser';\r\n\r\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function computeStyle(data, options) {\r\n  const { x, y } = options;\r\n  const { popper } = data.offsets;\r\n\r\n  // Remove this legacy support in Popper.js v2\r\n  const legacyGpuAccelerationOption = find(\r\n    data.instance.modifiers,\r\n    modifier => modifier.name === 'applyStyle'\r\n  ).gpuAcceleration;\r\n  if (legacyGpuAccelerationOption !== undefined) {\r\n    console.warn(\r\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\r\n    );\r\n  }\r\n  const gpuAcceleration =\r\n    legacyGpuAccelerationOption !== undefined\r\n      ? legacyGpuAccelerationOption\r\n      : options.gpuAcceleration;\r\n\r\n  const offsetParent = getOffsetParent(data.instance.popper);\r\n  const offsetParentRect = getBoundingClientRect(offsetParent);\r\n\r\n  // Styles\r\n  const styles = {\r\n    position: popper.position,\r\n  };\r\n\r\n  const offsets = getRoundedOffsets(\r\n    data,\r\n    window.devicePixelRatio < 2 || !isFirefox\r\n  );\r\n\r\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\r\n  const sideB = y === 'right' ? 'left' : 'right';\r\n\r\n  // if gpuAcceleration is set to `true` and transform is supported,\r\n  //  we use `translate3d` to apply the position to the popper we\r\n  // automatically use the supported prefixed version if needed\r\n  const prefixedProperty = getSupportedPropertyName('transform');\r\n\r\n  // now, let's make a step back and look at this code closely (wtf?)\r\n  // If the content of the popper grows once it's been positioned, it\r\n  // may happen that the popper gets misplaced because of the new content\r\n  // overflowing its reference element\r\n  // To avoid this problem, we provide two options (x and y), which allow\r\n  // the consumer to define the offset origin.\r\n  // If we position a popper on top of a reference element, we can set\r\n  // `x` to `top` to make the popper grow towards its top instead of\r\n  // its bottom.\r\n  let left, top;\r\n  if (sideA === 'bottom') {\r\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\r\n    // and not the bottom of the html element\r\n    if (offsetParent.nodeName === 'HTML') {\r\n      top = -offsetParent.clientHeight + offsets.bottom;\r\n    } else {\r\n      top = -offsetParentRect.height + offsets.bottom;\r\n    }\r\n  } else {\r\n    top = offsets.top;\r\n  }\r\n  if (sideB === 'right') {\r\n    if (offsetParent.nodeName === 'HTML') {\r\n      left = -offsetParent.clientWidth + offsets.right;\r\n    } else {\r\n      left = -offsetParentRect.width + offsets.right;\r\n    }\r\n  } else {\r\n    left = offsets.left;\r\n  }\r\n  if (gpuAcceleration && prefixedProperty) {\r\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\r\n    styles[sideA] = 0;\r\n    styles[sideB] = 0;\r\n    styles.willChange = 'transform';\r\n  } else {\r\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\r\n    const invertTop = sideA === 'bottom' ? -1 : 1;\r\n    const invertLeft = sideB === 'right' ? -1 : 1;\r\n    styles[sideA] = top * invertTop;\r\n    styles[sideB] = left * invertLeft;\r\n    //styles.willChange = `${sideA}, ${sideB}`;\r\n  }\r\n\r\n  // Attributes\r\n  const attributes = {\r\n    'x-placement': data.placement,\r\n  };\r\n\r\n  // Update `data` attributes, styles and arrowStyles\r\n  data.attributes = { ...attributes, ...data.attributes };\r\n  data.styles = { ...styles, ...data.styles };\r\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\r\n\r\n  return data;\r\n}\r\n","import find from './find';\r\n\r\n/**\r\n * Helper used to know if the given modifier depends from another one.<br />\r\n * It checks if the needed modifier is listed and enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Array} modifiers - list of modifiers\r\n * @param {String} requestingName - name of requesting modifier\r\n * @param {String} requestedName - name of requested modifier\r\n * @returns {Boolean}\r\n */\r\nexport default function isModifierRequired(\r\n  modifiers,\r\n  requestingName,\r\n  requestedName\r\n) {\r\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\r\n\r\n  const isRequired =\r\n    !!requesting &&\r\n    modifiers.some(modifier => {\r\n      return (\r\n        modifier.name === requestedName &&\r\n        modifier.enabled &&\r\n        modifier.order < requesting.order\r\n      );\r\n    });\r\n\r\n  if (!isRequired) {\r\n    const requesting = `\\`${requestingName}\\``;\r\n    const requested = `\\`${requestedName}\\``;\r\n    console.warn(\r\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\r\n    );\r\n  }\r\n  return isRequired;\r\n}\r\n","import getClientRect from '../utils/getClientRect';\r\nimport getOuterSizes from '../utils/getOuterSizes';\r\nimport isModifierRequired from '../utils/isModifierRequired';\r\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function arrow(data, options) {\r\n  // arrow depends on keepTogether in order to work\r\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\r\n    return data;\r\n  }\r\n\r\n  let arrowElement = options.element;\r\n\r\n  // if arrowElement is a string, suppose it's a CSS selector\r\n  if (typeof arrowElement === 'string') {\r\n    arrowElement = data.instance.popper.querySelector(arrowElement);\r\n\r\n    // if arrowElement is not found, don't run the modifier\r\n    if (!arrowElement) {\r\n      return data;\r\n    }\r\n  } else {\r\n    // if the arrowElement isn't a query selector we must check that the\r\n    // provided DOM node is child of its popper node\r\n    if (!data.instance.popper.contains(arrowElement)) {\r\n      console.warn(\r\n        'WARNING: `arrow.element` must be child of its popper element!'\r\n      );\r\n      return data;\r\n    }\r\n  }\r\n\r\n  const placement = data.placement.split('-')[0];\r\n  const { popper, reference } = data.offsets;\r\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\r\n\r\n  const len = isVertical ? 'height' : 'width';\r\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\r\n  const side = sideCapitalized.toLowerCase();\r\n  const altSide = isVertical ? 'left' : 'top';\r\n  const opSide = isVertical ? 'bottom' : 'right';\r\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\r\n\r\n  //\r\n  // extends keepTogether behavior making sure the popper and its\r\n  // reference have enough pixels in conjunction\r\n  //\r\n\r\n  // top/left side\r\n  if (reference[opSide] - arrowElementSize < popper[side]) {\r\n    data.offsets.popper[side] -=\r\n      popper[side] - (reference[opSide] - arrowElementSize);\r\n  }\r\n  // bottom/right side\r\n  if (reference[side] + arrowElementSize > popper[opSide]) {\r\n    data.offsets.popper[side] +=\r\n      reference[side] + arrowElementSize - popper[opSide];\r\n  }\r\n  data.offsets.popper = getClientRect(data.offsets.popper);\r\n\r\n  // compute center of the popper\r\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\r\n\r\n  // Compute the sideValue using the updated popper offsets\r\n  // take popper margin in account because we don't have this info available\r\n  const css = getStyleComputedProperty(data.instance.popper);\r\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\r\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\r\n  let sideValue =\r\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\r\n\r\n  // prevent arrowElement from being placed not contiguously to its popper\r\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\r\n\r\n  data.arrowElement = arrowElement;\r\n  data.offsets.arrow = {\r\n    [side]: Math.round(sideValue),\r\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\r\n  };\r\n\r\n  return data;\r\n}\r\n","/**\r\n * Get the opposite placement variation of the given one\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement variation\r\n * @returns {String} flipped placement variation\r\n */\r\nexport default function getOppositeVariation(variation) {\r\n  if (variation === 'end') {\r\n    return 'start';\r\n  } else if (variation === 'start') {\r\n    return 'end';\r\n  }\r\n  return variation;\r\n}\r\n","/**\r\n * List of accepted placements to use as values of the `placement` option.<br />\r\n * Valid placements are:\r\n * - `auto`\r\n * - `top`\r\n * - `right`\r\n * - `bottom`\r\n * - `left`\r\n *\r\n * Each placement can have a variation from this list:\r\n * - `-start`\r\n * - `-end`\r\n *\r\n * Variations are interpreted easily if you think of them as the left to right\r\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\r\n * is right.<br />\r\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\r\n *\r\n * Some valid examples are:\r\n * - `top-end` (on top of reference, right aligned)\r\n * - `right-start` (on right of reference, top aligned)\r\n * - `bottom` (on bottom, centered)\r\n * - `auto-end` (on the side with more space available, alignment depends by placement)\r\n *\r\n * @static\r\n * @type {Array}\r\n * @enum {String}\r\n * @readonly\r\n * @method placements\r\n * @memberof Popper\r\n */\r\nexport default [\r\n  'auto-start',\r\n  'auto',\r\n  'auto-end',\r\n  'top-start',\r\n  'top',\r\n  'top-end',\r\n  'right-start',\r\n  'right',\r\n  'right-end',\r\n  'bottom-end',\r\n  'bottom',\r\n  'bottom-start',\r\n  'left-end',\r\n  'left',\r\n  'left-start',\r\n];\r\n","import placements from '../methods/placements';\r\n\r\n// Get rid of `auto` `auto-start` and `auto-end`\r\nconst validPlacements = placements.slice(3);\r\n\r\n/**\r\n * Given an initial placement, returns all the subsequent placements\r\n * clockwise (or counter-clockwise).\r\n *\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement - A valid placement (it accepts variations)\r\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\r\n * @returns {Array} placements including their variations\r\n */\r\nexport default function clockwise(placement, counter = false) {\r\n  const index = validPlacements.indexOf(placement);\r\n  const arr = validPlacements\r\n    .slice(index + 1)\r\n    .concat(validPlacements.slice(0, index));\r\n  return counter ? arr.reverse() : arr;\r\n}\r\n","import getOppositePlacement from '../utils/getOppositePlacement';\r\nimport getOppositeVariation from '../utils/getOppositeVariation';\r\nimport getPopperOffsets from '../utils/getPopperOffsets';\r\nimport runModifiers from '../utils/runModifiers';\r\nimport getBoundaries from '../utils/getBoundaries';\r\nimport isModifierEnabled from '../utils/isModifierEnabled';\r\nimport clockwise from '../utils/clockwise';\r\n\r\nconst BEHAVIORS = {\r\n  FLIP: 'flip',\r\n  CLOCKWISE: 'clockwise',\r\n  COUNTERCLOCKWISE: 'counterclockwise',\r\n};\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function flip(data, options) {\r\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\r\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\r\n    return data;\r\n  }\r\n\r\n  if (data.flipped && data.placement === data.originalPlacement) {\r\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\r\n    return data;\r\n  }\r\n\r\n  const boundaries = getBoundaries(\r\n    data.instance.popper,\r\n    data.instance.reference,\r\n    options.padding,\r\n    options.boundariesElement,\r\n    data.positionFixed\r\n  );\r\n\r\n  let placement = data.placement.split('-')[0];\r\n  let placementOpposite = getOppositePlacement(placement);\r\n  let variation = data.placement.split('-')[1] || '';\r\n\r\n  let flipOrder = [];\r\n\r\n  switch (options.behavior) {\r\n    case BEHAVIORS.FLIP:\r\n      flipOrder = [placement, placementOpposite];\r\n      break;\r\n    case BEHAVIORS.CLOCKWISE:\r\n      flipOrder = clockwise(placement);\r\n      break;\r\n    case BEHAVIORS.COUNTERCLOCKWISE:\r\n      flipOrder = clockwise(placement, true);\r\n      break;\r\n    default:\r\n      flipOrder = options.behavior;\r\n  }\r\n\r\n  flipOrder.forEach((step, index) => {\r\n    if (placement !== step || flipOrder.length === index + 1) {\r\n      return data;\r\n    }\r\n\r\n    placement = data.placement.split('-')[0];\r\n    placementOpposite = getOppositePlacement(placement);\r\n\r\n    const popperOffsets = data.offsets.popper;\r\n    const refOffsets = data.offsets.reference;\r\n\r\n    // using floor because the reference offsets may contain decimals we are not going to consider here\r\n    const floor = Math.floor;\r\n    const overlapsRef =\r\n      (placement === 'left' &&\r\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\r\n      (placement === 'right' &&\r\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\r\n      (placement === 'top' &&\r\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\r\n      (placement === 'bottom' &&\r\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\r\n\r\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\r\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\r\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\r\n    const overflowsBottom =\r\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\r\n\r\n    const overflowsBoundaries =\r\n      (placement === 'left' && overflowsLeft) ||\r\n      (placement === 'right' && overflowsRight) ||\r\n      (placement === 'top' && overflowsTop) ||\r\n      (placement === 'bottom' && overflowsBottom);\r\n\r\n    // flip the variation if required\r\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\r\n\r\n    // flips variation if reference element overflows boundaries\r\n    const flippedVariationByRef =\r\n      !!options.flipVariations &&\r\n      ((isVertical && variation === 'start' && overflowsLeft) ||\r\n        (isVertical && variation === 'end' && overflowsRight) ||\r\n        (!isVertical && variation === 'start' && overflowsTop) ||\r\n        (!isVertical && variation === 'end' && overflowsBottom));\r\n\r\n    // flips variation if popper content overflows boundaries\r\n    const flippedVariationByContent =\r\n      !!options.flipVariationsByContent &&\r\n      ((isVertical && variation === 'start' && overflowsRight) ||\r\n        (isVertical && variation === 'end' && overflowsLeft) ||\r\n        (!isVertical && variation === 'start' && overflowsBottom) ||\r\n        (!isVertical && variation === 'end' && overflowsTop));\r\n\r\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\r\n\r\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\r\n      // this boolean to detect any flip loop\r\n      data.flipped = true;\r\n\r\n      if (overlapsRef || overflowsBoundaries) {\r\n        placement = flipOrder[index + 1];\r\n      }\r\n\r\n      if (flippedVariation) {\r\n        variation = getOppositeVariation(variation);\r\n      }\r\n\r\n      data.placement = placement + (variation ? '-' + variation : '');\r\n\r\n      // this object contains `position`, we want to preserve it along with\r\n      // any additional property we may add in the future\r\n      data.offsets.popper = {\r\n        ...data.offsets.popper,\r\n        ...getPopperOffsets(\r\n          data.instance.popper,\r\n          data.offsets.reference,\r\n          data.placement\r\n        ),\r\n      };\r\n\r\n      data = runModifiers(data.instance.modifiers, data, 'flip');\r\n    }\r\n  });\r\n  return data;\r\n}\r\n","/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function keepTogether(data) {\r\n  const { popper, reference } = data.offsets;\r\n  const placement = data.placement.split('-')[0];\r\n  const floor = Math.floor;\r\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\r\n  const side = isVertical ? 'right' : 'bottom';\r\n  const opSide = isVertical ? 'left' : 'top';\r\n  const measurement = isVertical ? 'width' : 'height';\r\n\r\n  if (popper[side] < floor(reference[opSide])) {\r\n    data.offsets.popper[opSide] =\r\n      floor(reference[opSide]) - popper[measurement];\r\n  }\r\n  if (popper[opSide] > floor(reference[side])) {\r\n    data.offsets.popper[opSide] = floor(reference[side]);\r\n  }\r\n\r\n  return data;\r\n}\r\n","import isNumeric from '../utils/isNumeric';\r\nimport getClientRect from '../utils/getClientRect';\r\nimport find from '../utils/find';\r\n\r\n/**\r\n * Converts a string containing value + unit into a px value number\r\n * @function\r\n * @memberof {modifiers~offset}\r\n * @private\r\n * @argument {String} str - Value + unit string\r\n * @argument {String} measurement - `height` or `width`\r\n * @argument {Object} popperOffsets\r\n * @argument {Object} referenceOffsets\r\n * @returns {Number|String}\r\n * Value in pixels, or original string if no values were extracted\r\n */\r\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\r\n  // separate value from unit\r\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\r\n  const value = +split[1];\r\n  const unit = split[2];\r\n\r\n  // If it's not a number it's an operator, I guess\r\n  if (!value) {\r\n    return str;\r\n  }\r\n\r\n  if (unit.indexOf('%') === 0) {\r\n    let element;\r\n    switch (unit) {\r\n      case '%p':\r\n        element = popperOffsets;\r\n        break;\r\n      case '%':\r\n      case '%r':\r\n      default:\r\n        element = referenceOffsets;\r\n    }\r\n\r\n    const rect = getClientRect(element);\r\n    return rect[measurement] / 100 * value;\r\n  } else if (unit === 'vh' || unit === 'vw') {\r\n    // if is a vh or vw, we calculate the size based on the viewport\r\n    let size;\r\n    if (unit === 'vh') {\r\n      size = Math.max(\r\n        document.documentElement.clientHeight,\r\n        window.innerHeight || 0\r\n      );\r\n    } else {\r\n      size = Math.max(\r\n        document.documentElement.clientWidth,\r\n        window.innerWidth || 0\r\n      );\r\n    }\r\n    return size / 100 * value;\r\n  } else {\r\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\r\n    // if is an implicit unit, it's px, and we return just the value\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\r\n * @function\r\n * @memberof {modifiers~offset}\r\n * @private\r\n * @argument {String} offset\r\n * @argument {Object} popperOffsets\r\n * @argument {Object} referenceOffsets\r\n * @argument {String} basePlacement\r\n * @returns {Array} a two cells array with x and y offsets in numbers\r\n */\r\nexport function parseOffset(\r\n  offset,\r\n  popperOffsets,\r\n  referenceOffsets,\r\n  basePlacement\r\n) {\r\n  const offsets = [0, 0];\r\n\r\n  // Use height if placement is left or right and index is 0 otherwise use width\r\n  // in this way the first offset will use an axis and the second one\r\n  // will use the other one\r\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\r\n\r\n  // Split the offset string to obtain a list of values and operands\r\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\r\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\r\n\r\n  // Detect if the offset string contains a pair of values or a single one\r\n  // they could be separated by comma or space\r\n  const divider = fragments.indexOf(\r\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\r\n  );\r\n\r\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\r\n    console.warn(\r\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\r\n    );\r\n  }\r\n\r\n  // If divider is found, we divide the list of values and operands to divide\r\n  // them by ofset X and Y.\r\n  const splitRegex = /\\s*,\\s*|\\s+/;\r\n  let ops = divider !== -1\r\n    ? [\r\n        fragments\r\n          .slice(0, divider)\r\n          .concat([fragments[divider].split(splitRegex)[0]]),\r\n        [fragments[divider].split(splitRegex)[1]].concat(\r\n          fragments.slice(divider + 1)\r\n        ),\r\n      ]\r\n    : [fragments];\r\n\r\n  // Convert the values with units to absolute pixels to allow our computations\r\n  ops = ops.map((op, index) => {\r\n    // Most of the units rely on the orientation of the popper\r\n    const measurement = (index === 1 ? !useHeight : useHeight)\r\n      ? 'height'\r\n      : 'width';\r\n    let mergeWithPrevious = false;\r\n    return (\r\n      op\r\n        // This aggregates any `+` or `-` sign that aren't considered operators\r\n        // e.g.: 10 + +5 => [10, +, +5]\r\n        .reduce((a, b) => {\r\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\r\n            a[a.length - 1] = b;\r\n            mergeWithPrevious = true;\r\n            return a;\r\n          } else if (mergeWithPrevious) {\r\n            a[a.length - 1] += b;\r\n            mergeWithPrevious = false;\r\n            return a;\r\n          } else {\r\n            return a.concat(b);\r\n          }\r\n        }, [])\r\n        // Here we convert the string values into number values (in px)\r\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\r\n    );\r\n  });\r\n\r\n  // Loop trough the offsets arrays and execute the operations\r\n  ops.forEach((op, index) => {\r\n    op.forEach((frag, index2) => {\r\n      if (isNumeric(frag)) {\r\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\r\n      }\r\n    });\r\n  });\r\n  return offsets;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @argument {Number|String} options.offset=0\r\n * The offset value as described in the modifier description\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function offset(data, { offset }) {\r\n  const { placement, offsets: { popper, reference } } = data;\r\n  const basePlacement = placement.split('-')[0];\r\n\r\n  let offsets;\r\n  if (isNumeric(+offset)) {\r\n    offsets = [+offset, 0];\r\n  } else {\r\n    offsets = parseOffset(offset, popper, reference, basePlacement);\r\n  }\r\n\r\n  if (basePlacement === 'left') {\r\n    popper.top += offsets[0];\r\n    popper.left -= offsets[1];\r\n  } else if (basePlacement === 'right') {\r\n    popper.top += offsets[0];\r\n    popper.left += offsets[1];\r\n  } else if (basePlacement === 'top') {\r\n    popper.left += offsets[0];\r\n    popper.top -= offsets[1];\r\n  } else if (basePlacement === 'bottom') {\r\n    popper.left += offsets[0];\r\n    popper.top += offsets[1];\r\n  }\r\n\r\n  data.popper = popper;\r\n  return data;\r\n}\r\n","import getOffsetParent from '../utils/getOffsetParent';\r\nimport getBoundaries from '../utils/getBoundaries';\r\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function preventOverflow(data, options) {\r\n  let boundariesElement =\r\n    options.boundariesElement || getOffsetParent(data.instance.popper);\r\n\r\n  // If offsetParent is the reference element, we really want to\r\n  // go one step up and use the next offsetParent as reference to\r\n  // avoid to make this modifier completely useless and look like broken\r\n  if (data.instance.reference === boundariesElement) {\r\n    boundariesElement = getOffsetParent(boundariesElement);\r\n  }\r\n\r\n  // NOTE: DOM access here\r\n  // resets the popper's position so that the document size can be calculated excluding\r\n  // the size of the popper element itself\r\n  const transformProp = getSupportedPropertyName('transform');\r\n  const popperStyles = data.instance.popper.style; // assignment to help minification\r\n  const { top, left, [transformProp]: transform } = popperStyles;\r\n  popperStyles.top = '';\r\n  popperStyles.left = '';\r\n  popperStyles[transformProp] = '';\r\n\r\n  const boundaries = getBoundaries(\r\n    data.instance.popper,\r\n    data.instance.reference,\r\n    options.padding,\r\n    boundariesElement,\r\n    data.positionFixed\r\n  );\r\n\r\n  // NOTE: DOM access here\r\n  // restores the original style properties after the offsets have been computed\r\n  popperStyles.top = top;\r\n  popperStyles.left = left;\r\n  popperStyles[transformProp] = transform;\r\n\r\n  options.boundaries = boundaries;\r\n\r\n  const order = options.priority;\r\n  let popper = data.offsets.popper;\r\n\r\n  const check = {\r\n    primary(placement) {\r\n      let value = popper[placement];\r\n      if (\r\n        popper[placement] < boundaries[placement] &&\r\n        !options.escapeWithReference\r\n      ) {\r\n        value = Math.max(popper[placement], boundaries[placement]);\r\n      }\r\n      return { [placement]: value };\r\n    },\r\n    secondary(placement) {\r\n      const mainSide = placement === 'right' ? 'left' : 'top';\r\n      let value = popper[mainSide];\r\n      if (\r\n        popper[placement] > boundaries[placement] &&\r\n        !options.escapeWithReference\r\n      ) {\r\n        value = Math.min(\r\n          popper[mainSide],\r\n          boundaries[placement] -\r\n            (placement === 'right' ? popper.width : popper.height)\r\n        );\r\n      }\r\n      return { [mainSide]: value };\r\n    },\r\n  };\r\n\r\n  order.forEach(placement => {\r\n    const side =\r\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\r\n    popper = { ...popper, ...check[side](placement) };\r\n  });\r\n\r\n  data.offsets.popper = popper;\r\n\r\n  return data;\r\n}\r\n","/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function shift(data) {\r\n  const placement = data.placement;\r\n  const basePlacement = placement.split('-')[0];\r\n  const shiftvariation = placement.split('-')[1];\r\n\r\n  // if shift shiftvariation is specified, run the modifier\r\n  if (shiftvariation) {\r\n    const { reference, popper } = data.offsets;\r\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\r\n    const side = isVertical ? 'left' : 'top';\r\n    const measurement = isVertical ? 'width' : 'height';\r\n\r\n    const shiftOffsets = {\r\n      start: { [side]: reference[side] },\r\n      end: {\r\n        [side]: reference[side] + reference[measurement] - popper[measurement],\r\n      },\r\n    };\r\n\r\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\r\n  }\r\n\r\n  return data;\r\n}\r\n","import isModifierRequired from '../utils/isModifierRequired';\r\nimport find from '../utils/find';\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function hide(data) {\r\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\r\n    return data;\r\n  }\r\n\r\n  const refRect = data.offsets.reference;\r\n  const bound = find(\r\n    data.instance.modifiers,\r\n    modifier => modifier.name === 'preventOverflow'\r\n  ).boundaries;\r\n\r\n  if (\r\n    refRect.bottom < bound.top ||\r\n    refRect.left > bound.right ||\r\n    refRect.top > bound.bottom ||\r\n    refRect.right < bound.left\r\n  ) {\r\n    // Avoid unnecessary DOM access if visibility hasn't changed\r\n    if (data.hide === true) {\r\n      return data;\r\n    }\r\n\r\n    data.hide = true;\r\n    data.attributes['x-out-of-boundaries'] = '';\r\n  } else {\r\n    // Avoid unnecessary DOM access if visibility hasn't changed\r\n    if (data.hide === false) {\r\n      return data;\r\n    }\r\n\r\n    data.hide = false;\r\n    data.attributes['x-out-of-boundaries'] = false;\r\n  }\r\n\r\n  return data;\r\n}\r\n","import getClientRect from '../utils/getClientRect';\r\nimport getOppositePlacement from '../utils/getOppositePlacement';\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nexport default function inner(data) {\r\n  const placement = data.placement;\r\n  const basePlacement = placement.split('-')[0];\r\n  const { popper, reference } = data.offsets;\r\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\r\n\r\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\r\n\r\n  popper[isHoriz ? 'left' : 'top'] =\r\n    reference[basePlacement] -\r\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\r\n\r\n  data.placement = getOppositePlacement(placement);\r\n  data.offsets.popper = getClientRect(popper);\r\n\r\n  return data;\r\n}\r\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\r\nimport computeStyle from './computeStyle';\r\nimport arrow from './arrow';\r\nimport flip from './flip';\r\nimport keepTogether from './keepTogether';\r\nimport offset from './offset';\r\nimport preventOverflow from './preventOverflow';\r\nimport shift from './shift';\r\nimport hide from './hide';\r\nimport inner from './inner';\r\n\r\n/**\r\n * Modifier function, each modifier can have a function of this type assigned\r\n * to its `fn` property.<br />\r\n * These functions will be called on each update, this means that you must\r\n * make sure they are performant enough to avoid performance bottlenecks.\r\n *\r\n * @function ModifierFn\r\n * @argument {dataObject} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {dataObject} The data object, properly modified\r\n */\r\n\r\n/**\r\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\r\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\r\n * needed by the library.\r\n *\r\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\r\n * All the other properties are configurations that could be tweaked.\r\n * @namespace modifiers\r\n */\r\nexport default {\r\n  /**\r\n   * Modifier used to shift the popper on the start or end of its reference\r\n   * element.<br />\r\n   * It will read the variation of the `placement` property.<br />\r\n   * It can be one either `-end` or `-start`.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  shift: {\r\n    /** @prop {number} order=100 - Index used to define the order of execution */\r\n    order: 100,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: shift,\r\n  },\r\n\r\n  /**\r\n   * The `offset` modifier can shift your popper on both its axis.\r\n   *\r\n   * It accepts the following units:\r\n   * - `px` or unit-less, interpreted as pixels\r\n   * - `%` or `%r`, percentage relative to the length of the reference element\r\n   * - `%p`, percentage relative to the length of the popper element\r\n   * - `vw`, CSS viewport width unit\r\n   * - `vh`, CSS viewport height unit\r\n   *\r\n   * For length is intended the main axis relative to the placement of the popper.<br />\r\n   * This means that if the placement is `top` or `bottom`, the length will be the\r\n   * `width`. In case of `left` or `right`, it will be the `height`.\r\n   *\r\n   * You can provide a single value (as `Number` or `String`), or a pair of values\r\n   * as `String` divided by a comma or one (or more) white spaces.<br />\r\n   * The latter is a deprecated method because it leads to confusion and will be\r\n   * removed in v2.<br />\r\n   * Additionally, it accepts additions and subtractions between different units.\r\n   * Note that multiplications and divisions aren't supported.\r\n   *\r\n   * Valid examples are:\r\n   * ```\r\n   * 10\r\n   * '10%'\r\n   * '10, 10'\r\n   * '10%, 10'\r\n   * '10 + 10%'\r\n   * '10 - 5vh + 3%'\r\n   * '-10px + 5vh, 5px - 6%'\r\n   * ```\r\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\r\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\r\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  offset: {\r\n    /** @prop {number} order=200 - Index used to define the order of execution */\r\n    order: 200,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: offset,\r\n    /** @prop {Number|String} offset=0\r\n     * The offset value as described in the modifier description\r\n     */\r\n    offset: 0,\r\n  },\r\n\r\n  /**\r\n   * Modifier used to prevent the popper from being positioned outside the boundary.\r\n   *\r\n   * A scenario exists where the reference itself is not within the boundaries.<br />\r\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\r\n   * In this case we need to decide whether the popper should either:\r\n   *\r\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\r\n   * - if it should ignore the boundary and \"escape with its reference\"\r\n   *\r\n   * When `escapeWithReference` is set to`true` and reference is completely\r\n   * outside its boundaries, the popper will overflow (or completely leave)\r\n   * the boundaries in order to remain attached to the edge of the reference.\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  preventOverflow: {\r\n    /** @prop {number} order=300 - Index used to define the order of execution */\r\n    order: 300,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: preventOverflow,\r\n    /**\r\n     * @prop {Array} [priority=['left','right','top','bottom']]\r\n     * Popper will try to prevent overflow following these priorities by default,\r\n     * then, it could overflow on the left and on top of the `boundariesElement`\r\n     */\r\n    priority: ['left', 'right', 'top', 'bottom'],\r\n    /**\r\n     * @prop {number} padding=5\r\n     * Amount of pixel used to define a minimum distance between the boundaries\r\n     * and the popper. This makes sure the popper always has a little padding\r\n     * between the edges of its container\r\n     */\r\n    padding: 5,\r\n    /**\r\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\r\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\r\n     * `viewport` or any DOM element.\r\n     */\r\n    boundariesElement: 'scrollParent',\r\n  },\r\n\r\n  /**\r\n   * Modifier used to make sure the reference and its popper stay near each other\r\n   * without leaving any gap between the two. Especially useful when the arrow is\r\n   * enabled and you want to ensure that it points to its reference element.\r\n   * It cares only about the first axis. You can still have poppers with margin\r\n   * between the popper and its reference element.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  keepTogether: {\r\n    /** @prop {number} order=400 - Index used to define the order of execution */\r\n    order: 400,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: keepTogether,\r\n  },\r\n\r\n  /**\r\n   * This modifier is used to move the `arrowElement` of the popper to make\r\n   * sure it is positioned between the reference element and its popper element.\r\n   * It will read the outer size of the `arrowElement` node to detect how many\r\n   * pixels of conjunction are needed.\r\n   *\r\n   * It has no effect if no `arrowElement` is provided.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  arrow: {\r\n    /** @prop {number} order=500 - Index used to define the order of execution */\r\n    order: 500,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: arrow,\r\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\r\n    element: '[x-arrow]',\r\n  },\r\n\r\n  /**\r\n   * Modifier used to flip the popper's placement when it starts to overlap its\r\n   * reference element.\r\n   *\r\n   * Requires the `preventOverflow` modifier before it in order to work.\r\n   *\r\n   * **NOTE:** this modifier will interrupt the current update cycle and will\r\n   * restart it if it detects the need to flip the placement.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  flip: {\r\n    /** @prop {number} order=600 - Index used to define the order of execution */\r\n    order: 600,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: flip,\r\n    /**\r\n     * @prop {String|Array} behavior='flip'\r\n     * The behavior used to change the popper's placement. It can be one of\r\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\r\n     * placements (with optional variations)\r\n     */\r\n    behavior: 'flip',\r\n    /**\r\n     * @prop {number} padding=5\r\n     * The popper will flip if it hits the edges of the `boundariesElement`\r\n     */\r\n    padding: 5,\r\n    /**\r\n     * @prop {String|HTMLElement} boundariesElement='viewport'\r\n     * The element which will define the boundaries of the popper position.\r\n     * The popper will never be placed outside of the defined boundaries\r\n     * (except if `keepTogether` is enabled)\r\n     */\r\n    boundariesElement: 'viewport',\r\n    /**\r\n     * @prop {Boolean} flipVariations=false\r\n     * The popper will switch placement variation between `-start` and `-end` when\r\n     * the reference element overlaps its boundaries.\r\n     *\r\n     * The original placement should have a set variation.\r\n     */\r\n    flipVariations: false,\r\n    /**\r\n     * @prop {Boolean} flipVariationsByContent=false\r\n     * The popper will switch placement variation between `-start` and `-end` when\r\n     * the popper element overlaps its reference boundaries.\r\n     *\r\n     * The original placement should have a set variation.\r\n     */\r\n    flipVariationsByContent: false,\r\n  },\r\n\r\n  /**\r\n   * Modifier used to make the popper flow toward the inner of the reference element.\r\n   * By default, when this modifier is disabled, the popper will be placed outside\r\n   * the reference element.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  inner: {\r\n    /** @prop {number} order=700 - Index used to define the order of execution */\r\n    order: 700,\r\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\r\n    enabled: false,\r\n    /** @prop {ModifierFn} */\r\n    fn: inner,\r\n  },\r\n\r\n  /**\r\n   * Modifier used to hide the popper when its reference element is outside of the\r\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\r\n   * be used to hide with a CSS selector the popper when its reference is\r\n   * out of boundaries.\r\n   *\r\n   * Requires the `preventOverflow` modifier before it in order to work.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  hide: {\r\n    /** @prop {number} order=800 - Index used to define the order of execution */\r\n    order: 800,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: hide,\r\n  },\r\n\r\n  /**\r\n   * Computes the style that will be applied to the popper element to gets\r\n   * properly positioned.\r\n   *\r\n   * Note that this modifier will not touch the DOM, it just prepares the styles\r\n   * so that `applyStyle` modifier can apply it. This separation is useful\r\n   * in case you need to replace `applyStyle` with a custom implementation.\r\n   *\r\n   * This modifier has `850` as `order` value to maintain backward compatibility\r\n   * with previous versions of Popper.js. Expect the modifiers ordering method\r\n   * to change in future major versions of the library.\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  computeStyle: {\r\n    /** @prop {number} order=850 - Index used to define the order of execution */\r\n    order: 850,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: computeStyle,\r\n    /**\r\n     * @prop {Boolean} gpuAcceleration=true\r\n     * If true, it uses the CSS 3D transformation to position the popper.\r\n     * Otherwise, it will use the `top` and `left` properties\r\n     */\r\n    gpuAcceleration: false,\r\n    /**\r\n     * @prop {string} [x='bottom']\r\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\r\n     * Change this if your popper should grow in a direction different from `bottom`\r\n     */\r\n    x: 'bottom',\r\n    /**\r\n     * @prop {string} [x='left']\r\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\r\n     * Change this if your popper should grow in a direction different from `right`\r\n     */\r\n    y: 'right',\r\n  },\r\n\r\n  /**\r\n   * Applies the computed styles to the popper element.\r\n   *\r\n   * All the DOM manipulations are limited to this modifier. This is useful in case\r\n   * you want to integrate Popper.js inside a framework or view library and you\r\n   * want to delegate all the DOM manipulations to it.\r\n   *\r\n   * Note that if you disable this modifier, you must make sure the popper element\r\n   * has its position set to `absolute` before Popper.js can do its work!\r\n   *\r\n   * Just disable this modifier and define your own to achieve the desired effect.\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  applyStyle: {\r\n    /** @prop {number} order=900 - Index used to define the order of execution */\r\n    order: 900,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: applyStyle,\r\n    /** @prop {Function} */\r\n    onLoad: applyStyleOnLoad,\r\n    /**\r\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\r\n     * @prop {Boolean} gpuAcceleration=true\r\n     * If true, it uses the CSS 3D transformation to position the popper.\r\n     * Otherwise, it will use the `top` and `left` properties\r\n     */\r\n    gpuAcceleration: undefined,\r\n  },\r\n};\r\n\r\n/**\r\n * The `dataObject` is an object containing all the information used by Popper.js.\r\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\r\n * @name dataObject\r\n * @property {Object} data.instance The Popper.js instance\r\n * @property {String} data.placement Placement applied to popper\r\n * @property {String} data.originalPlacement Placement originally defined on init\r\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\r\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\r\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\r\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\r\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\r\n * @property {Object} data.boundaries Offsets of the popper boundaries\r\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\r\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\r\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\r\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\r\n */\r\n","import modifiers from '../modifiers/index';\r\n\r\n/**\r\n * Default options provided to Popper.js constructor.<br />\r\n * These can be overridden using the `options` argument of Popper.js.<br />\r\n * To override an option, simply pass an object with the same\r\n * structure of the `options` object, as the 3rd argument. For example:\r\n * ```\r\n * new Popper(ref, pop, {\r\n *   modifiers: {\r\n *     preventOverflow: { enabled: false }\r\n *   }\r\n * })\r\n * ```\r\n * @type {Object}\r\n * @static\r\n * @memberof Popper\r\n */\r\nexport default {\r\n  /**\r\n   * Popper's placement.\r\n   * @prop {Popper.placements} placement='bottom'\r\n   */\r\n  placement: 'bottom',\r\n\r\n  /**\r\n   * Set this to true if you want popper to position it self in 'fixed' mode\r\n   * @prop {Boolean} positionFixed=false\r\n   */\r\n  positionFixed: false,\r\n\r\n  /**\r\n   * Whether events (resize, scroll) are initially enabled.\r\n   * @prop {Boolean} eventsEnabled=true\r\n   */\r\n  eventsEnabled: true,\r\n\r\n  /**\r\n   * Set to true if you want to automatically remove the popper when\r\n   * you call the `destroy` method.\r\n   * @prop {Boolean} removeOnDestroy=false\r\n   */\r\n  removeOnDestroy: false,\r\n\r\n  /**\r\n   * Callback called when the popper is created.<br />\r\n   * By default, it is set to no-op.<br />\r\n   * Access Popper.js instance with `data.instance`.\r\n   * @prop {onCreate}\r\n   */\r\n  onCreate: () => {},\r\n\r\n  /**\r\n   * Callback called when the popper is updated. This callback is not called\r\n   * on the initialization/creation of the popper, but only on subsequent\r\n   * updates.<br />\r\n   * By default, it is set to no-op.<br />\r\n   * Access Popper.js instance with `data.instance`.\r\n   * @prop {onUpdate}\r\n   */\r\n  onUpdate: () => {},\r\n\r\n  /**\r\n   * List of modifiers used to modify the offsets before they are applied to the popper.\r\n   * They provide most of the functionalities of Popper.js.\r\n   * @prop {modifiers}\r\n   */\r\n  modifiers,\r\n};\r\n\r\n/**\r\n * @callback onCreate\r\n * @param {dataObject} data\r\n */\r\n\r\n/**\r\n * @callback onUpdate\r\n * @param {dataObject} data\r\n */\r\n","// Utils\r\nimport debounce from './utils/debounce';\r\nimport isFunction from './utils/isFunction';\r\n\r\n// Methods\r\nimport update from './methods/update';\r\nimport destroy from './methods/destroy';\r\nimport enableEventListeners from './methods/enableEventListeners';\r\nimport disableEventListeners from './methods/disableEventListeners';\r\nimport Defaults from './methods/defaults';\r\nimport placements from './methods/placements';\r\n\r\nexport default class Popper {\r\n  /**\r\n   * Creates a new Popper.js instance.\r\n   * @class Popper\r\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\r\n   * @param {Element} popper - The HTML / XML element used as the popper\r\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\r\n   * @return {Object} instance - The generated Popper.js instance\r\n   */\r\n  constructor(reference, popper, options = {}) {\r\n    // make update() debounced, so that it only runs at most once-per-tick\r\n    this.update = debounce(this.update.bind(this));\r\n\r\n    // with {} we create a new object with the options inside it\r\n    this.options = { ...Popper.Defaults, ...options };\r\n\r\n    // init state\r\n    this.state = {\r\n      isDestroyed: false,\r\n      isCreated: false,\r\n      scrollParents: [],\r\n    };\r\n\r\n    // get reference and popper elements (allow jQuery wrappers)\r\n    this.reference = reference && reference.jquery ? reference[0] : reference;\r\n    this.popper = popper && popper.jquery ? popper[0] : popper;\r\n\r\n    // Deep merge modifiers options\r\n    this.options.modifiers = {};\r\n    Object.keys({\r\n      ...Popper.Defaults.modifiers,\r\n      ...options.modifiers,\r\n    }).forEach(name => {\r\n      this.options.modifiers[name] = {\r\n        // If it's a built-in modifier, use it as base\r\n        ...(Popper.Defaults.modifiers[name] || {}),\r\n        // If there are custom options, override and merge with default ones\r\n        ...(options.modifiers ? options.modifiers[name] : {}),\r\n      };\r\n    });\r\n\r\n    // Refactoring modifiers' list (Object => Array)\r\n    this.modifiers = Object.keys(this.options.modifiers)\r\n      .map(name => ({\r\n        name,\r\n        ...this.options.modifiers[name],\r\n      }))\r\n      // sort the modifiers by order\r\n      .sort((a, b) => a.order - b.order);\r\n\r\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\r\n    // such code is executed in the same order of its modifier\r\n    // they could add new properties to their options configuration\r\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\r\n    this.modifiers.forEach(modifierOptions => {\r\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\r\n        modifierOptions.onLoad(\r\n          this.reference,\r\n          this.popper,\r\n          this.options,\r\n          modifierOptions,\r\n          this.state\r\n        );\r\n      }\r\n    });\r\n\r\n    // fire the first update to position the popper in the right place\r\n    this.update();\r\n\r\n    const eventsEnabled = this.options.eventsEnabled;\r\n    if (eventsEnabled) {\r\n      // setup event listeners, they will take care of update the position in specific situations\r\n      this.enableEventListeners();\r\n    }\r\n\r\n    this.state.eventsEnabled = eventsEnabled;\r\n  }\r\n\r\n  // We can't use class properties because they don't get listed in the\r\n  // class prototype and break stuff like Sinon stubs\r\n  update() {\r\n    return update.call(this);\r\n  }\r\n  destroy() {\r\n    return destroy.call(this);\r\n  }\r\n  enableEventListeners() {\r\n    return enableEventListeners.call(this);\r\n  }\r\n  disableEventListeners() {\r\n    return disableEventListeners.call(this);\r\n  }\r\n\r\n  /**\r\n   * Schedules an update. It will run on the next UI update available.\r\n   * @method scheduleUpdate\r\n   * @memberof Popper\r\n   */\r\n  scheduleUpdate = () => requestAnimationFrame(this.update);\r\n\r\n  /**\r\n   * Collection of utilities useful when writing custom modifiers.\r\n   * Starting from version 1.7, this method is available only if you\r\n   * include `popper-utils.js` before `popper.js`.\r\n   *\r\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\r\n   * and will be removed in v2! Use the PopperUtils module directly instead.\r\n   * Due to the high instability of the methods contained in Utils, we can't\r\n   * guarantee them to follow semver. Use them at your own risk!\r\n   * @static\r\n   * @private\r\n   * @type {Object}\r\n   * @deprecated since version 1.8\r\n   * @member Utils\r\n   * @memberof Popper\r\n   */\r\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\r\n\r\n  static placements = placements;\r\n\r\n  static Defaults = Defaults;\r\n}\r\n\r\n/**\r\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\r\n * and lets you use it as replacement of a real DOM node.<br />\r\n * You can use this method to position a popper relatively to a set of coordinates\r\n * in case you don't have a DOM node to use as reference.\r\n *\r\n * ```\r\n * new Popper(referenceObject, popperNode);\r\n * ```\r\n *\r\n * NB: This feature isn't supported in Internet Explorer 10.\r\n * @name referenceObject\r\n * @property {Function} data.getBoundingClientRect\r\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\r\n * @property {number} data.clientWidth\r\n * An ES6 getter that will return the width of the virtual reference element.\r\n * @property {number} data.clientHeight\r\n * An ES6 getter that will return the height of the virtual reference element.\r\n */\r\n"],"names":["window","document","navigator","timeoutDuration","i","longerTimeoutBrowsers","length","isBrowser","userAgent","indexOf","called","Promise","resolve","then","scheduled","supportsMicroTasks","functionToCheck","getType","toString","call","element","nodeType","ownerDocument","defaultView","css","getComputedStyle","property","nodeName","parentNode","host","body","getStyleComputedProperty","overflow","overflowX","overflowY","test","getScrollParent","getParentNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","version","documentElement","noOffsetParent","isIE","offsetParent","nextElementSibling","toUpperCase","getOffsetParent","firstElementChild","node","getRoot","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","parseFloat","styles","Math","max","parseInt","computedStyle","getSize","offsets","width","height","rect","getBoundingClientRect","result","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","display","getBordersSize","getClientRect","fixedPosition","runIsIE","isHTML","parent","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","excludeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","offset","isFixed","parentElement","el","boundaries","getFixedPositionOffsetParent","getReferenceNode","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","padding","isPaddingNumber","placement","getBoundaries","rects","refRect","sortedAreas","Object","keys","map","getArea","sort","b","area","a","filteredAreas","filter","computedPlacement","key","variation","split","commonOffsetParent","x","marginBottom","y","marginRight","hash","replace","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","Array","prototype","find","arr","findIndex","cur","match","obj","modifiersToRun","ends","modifiers","slice","forEach","warn","fn","enabled","isFunction","data","state","isDestroyed","getReferenceOffsets","options","positionFixed","computeAutoPlacement","flip","originalPlacement","getPopperOffsets","position","runModifiers","isCreated","onUpdate","onCreate","some","name","prefixes","upperProp","charAt","prefix","toCheck","style","isModifierEnabled","removeAttribute","willChange","getSupportedPropertyName","disableEventListeners","removeOnDestroy","removeChild","isBody","target","addEventListener","passive","push","updateBound","scrollElement","scrollParents","eventsEnabled","setupEventListeners","scheduleUpdate","removeEventListener","removeEventListeners","n","isNaN","isFinite","unit","isNumeric","value","attributes","setAttribute","instance","arrowElement","arrowStyles","round","floor","noRound","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","isFirefox","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","getRoundedOffsets","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","requesting","isRequired","requested","isModifierRequired","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","validPlacements","placements","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","clockwise","COUNTERCLOCKWISE","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","str","size","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","mergeWithPrevious","op","reduce","toValue","index2","basePlacement","parseOffset","transformProp","popperStyles","transform","priority","check","escapeWithReference","shiftvariation","shiftOffsets","bound","hide","subtractLength","Popper","requestAnimationFrame","update","debounce","bind","Defaults","jquery","modifierOptions","onLoad","enableEventListeners","destroy","Utils","global","PopperUtils"],"mappings":"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"}